PUT /_ingest/pipeline/SetPeriodYears
{
  "description": """"
    PVW-784 [BUG] Umsetzung PVW-767: Korrektur-Script f√ºr Fehler in Zeitraum-Facettierung 
    Pipeline recalculates the quarter century facets.
    
    Procedure
    Start/compile pipeline
    Execute search
    Delete pipeline
    
    Hints:
    the search is async and you get back a task with which the status can be checked e.g. GET /_tasks/lk3AiZV9R5Wc3wiPFmaD6w:14445773
    Es kann auch mit der "archiveRecordId" ein Test-Record modifiziert werden. Dazu die  <"match": {      "archiveRecordId> Suche unten verwenden
  """, 
 "processors" : [{
     "script" : {
        "lang" : "painless",
        "source" : """
        if (ctx.aggregationFields != null && ctx.aggregationFields.creationPeriodYears025 != null && ctx.creationPeriod != null)
        {
          def years =  null;
          def changed = false;
          def calculatedCreationPeriodYears025 = new ArrayList();
          if (ctx.creationPeriod != null && ctx.creationPeriod.years != null)
          {
            years = ctx.creationPeriod.years;
          }
         
          for (year in years)            
          {
            def calculatedYear = (int) Math.floor(year /25) * 25;
            if (!calculatedCreationPeriodYears025.contains(calculatedYear))
            {
              calculatedCreationPeriodYears025.add(calculatedYear);
            }
          }
          
          ctx.aggregationFields.creationPeriodYears025 = new ArrayList(calculatedCreationPeriodYears025);
          DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
          df.setTimeZone(TimeZone.getTimeZone("Europe/Amsterdam"));
          Date date = new Date();
          ctx.lastSyncDate = df.format(date);
        }
        """
      }
  }]
}

POST /archive/_update_by_query?pipeline=SetPeriodYears&conflicts=proceed&wait_for_completion=false
{
  "query" : {
     "bool": {
       "should":  [
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1925
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1975
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1825
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1875
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears025": {
              "value": 1725
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1775
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1625
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1675
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1525
            }
          }
        },
        {
         "term": {
           "aggregationFields.creationPeriodYears005": {
              "value": 1575
            }
          }
        }
      ]
    }
  }
}



POST archive/_update_by_query?pipeline=SetPeriodYears
{
  "query": {
    "match": {
      "archiveRecordId": "<TestId>"
    }
  }
}

DELETE /_ingest/pipeline/SetPeriodYears
