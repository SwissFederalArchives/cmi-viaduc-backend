//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// CM Informatik AG
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Data.Entity;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CMI.Access.Sql.Viaduc.EF", "Collection_Collection", "Parent", RelationshipMultiplicity.ZeroOrOne, typeof(CMI.Access.Sql.Viaduc.EF.Collection), "ChildCollections", RelationshipMultiplicity.Many, typeof(CMI.Access.Sql.Viaduc.EF.Collection), true)]
[assembly: EdmRelationshipAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur", RelationshipMultiplicity.One, typeof(CMI.Access.Sql.Viaduc.EF.ManuelleKorrektur), "ManuelleKorrekturFelder", RelationshipMultiplicity.Many, typeof(CMI.Access.Sql.Viaduc.EF.ManuelleKorrekturFeld), true)]
[assembly: EdmRelationshipAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur", RelationshipMultiplicity.One, typeof(CMI.Access.Sql.Viaduc.EF.ManuelleKorrektur), "ManuelleKorrekturStatusHistories", RelationshipMultiplicity.Many, typeof(CMI.Access.Sql.Viaduc.EF.ManuelleKorrekturStatusHistory), true)]

#endregion

namespace CMI.Access.Sql.Viaduc.EF
{

    #region ViaducDb

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ViaducDb : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new ViaducDb object.
        /// </summary>
        public ViaducDb() :
                base(@"metadata=res://*/Viaduc.csdl|res://*/Viaduc.ssdl|res://*/Viaduc.msl;provider=System.Data.SqlClient;provider connection string=""Data Source=localhost;Initial Catalog=viaduc;Integrated Security=False;Persist Security Info=False;User ID=viaduc;Password=""", "ViaducDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new ViaducDb object using the connection string found in the 'ViaducDb' section of the application configuration file.
        /// </summary>
        public ViaducDb(string connectionString) :
                base(connectionString, "ViaducDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ViaducDb object.
        /// </summary>
        public ViaducDb(EntityConnection connection) : base(connection, "ViaducDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Collection> Collections
        {
            get
            {
                if ((_Collections == null))
                {
                    _Collections = base.CreateObjectSet<Collection>("Collections");
                }
                return _Collections;
            }
        }
        private ObjectSet<Collection> _Collections;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionListItem> CollectionList
        {
            get
            {
                if ((_CollectionList == null))
                {
                    _CollectionList = base.CreateObjectSet<CollectionListItem>("CollectionList");
                }
                return _CollectionList;
            }
        }
        private ObjectSet<CollectionListItem> _CollectionList;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationUser> ApplicationUsers
        {
            get
            {
                if ((_ApplicationUsers == null))
                {
                    _ApplicationUsers = base.CreateObjectSet<ApplicationUser>("ApplicationUsers");
                }
                return _ApplicationUsers;
            }
        }
        private ObjectSet<ApplicationUser> _ApplicationUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManuelleKorrektur> ManuelleKorrekturen
        {
            get
            {
                if ((_ManuelleKorrekturen == null))
                {
                    _ManuelleKorrekturen = base.CreateObjectSet<ManuelleKorrektur>("ManuelleKorrekturen");
                }
                return _ManuelleKorrekturen;
            }
        }
        private ObjectSet<ManuelleKorrektur> _ManuelleKorrekturen;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManuelleKorrekturFeld> ManuelleKorrekturFelder
        {
            get
            {
                if ((_ManuelleKorrekturFelder == null))
                {
                    _ManuelleKorrekturFelder = base.CreateObjectSet<ManuelleKorrekturFeld>("ManuelleKorrekturFelder");
                }
                return _ManuelleKorrekturFelder;
            }
        }
        private ObjectSet<ManuelleKorrekturFeld> _ManuelleKorrekturFelder;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManuelleKorrekturStatusHistory> ManuelleKorrekturStatusHistories
        {
            get
            {
                if ((_ManuelleKorrekturStatusHistories == null))
                {
                    _ManuelleKorrekturStatusHistories = base.CreateObjectSet<ManuelleKorrekturStatusHistory>("ManuelleKorrekturStatusHistories");
                }
                return _ManuelleKorrekturStatusHistories;
            }
        }
        private ObjectSet<ManuelleKorrekturStatusHistory> _ManuelleKorrekturStatusHistories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VManuelleKorrektur> VManuelleKorrekturen
        {
            get
            {
                if ((_VManuelleKorrekturen == null))
                {
                    _VManuelleKorrekturen = base.CreateObjectSet<VManuelleKorrektur>("VManuelleKorrekturen");
                }
                return _VManuelleKorrekturen;
            }
        }
        private ObjectSet<VManuelleKorrektur> _VManuelleKorrekturen;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Collections EntitySet.
        /// </summary>
        public void AddToCollections(Collection collection)
        {
            base.AddObject("Collections", collection);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionList EntitySet.
        /// </summary>
        public void AddToCollectionList(CollectionListItem collectionListItem)
        {
            base.AddObject("CollectionList", collectionListItem);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationUsers EntitySet.
        /// </summary>
        public void AddToApplicationUsers(ApplicationUser applicationUser)
        {
            base.AddObject("ApplicationUsers", applicationUser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ManuelleKorrekturen EntitySet.
        /// </summary>
        public void AddToManuelleKorrekturen(ManuelleKorrektur manuelleKorrektur)
        {
            base.AddObject("ManuelleKorrekturen", manuelleKorrektur);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ManuelleKorrekturFelder EntitySet.
        /// </summary>
        public void AddToManuelleKorrekturFelder(ManuelleKorrekturFeld manuelleKorrekturFeld)
        {
            base.AddObject("ManuelleKorrekturFelder", manuelleKorrekturFeld);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ManuelleKorrekturStatusHistories EntitySet.
        /// </summary>
        public void AddToManuelleKorrekturStatusHistories(ManuelleKorrekturStatusHistory manuelleKorrekturStatusHistory)
        {
            base.AddObject("ManuelleKorrekturStatusHistories", manuelleKorrekturStatusHistory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VManuelleKorrekturen EntitySet.
        /// </summary>
        public void AddToVManuelleKorrekturen(VManuelleKorrektur vManuelleKorrektur)
        {
            base.AddObject("VManuelleKorrekturen", vManuelleKorrektur);
        }

        #endregion
    }

    #endregion
}

namespace CMI.Access.Sql.Viaduc.EF
{

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.Collection in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CollectionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="Collection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Collection : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Collection object.
        /// </summary>
        /// <param name="collectionId">Initial value of CollectionId.</param>
        /// <param name="language">Initial value of Language.</param>
        /// <param name="title">Initial value of Title.</param>
        /// <param name="descriptionShort">Initial value of DescriptionShort.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="validFrom">Initial value of ValidFrom.</param>
        /// <param name="validTo">Initial value of ValidTo.</param>
        /// <param name="collectionTypeId">Initial value of CollectionTypeId.</param>
        /// <param name="collectionPath">Initial value of CollectionPath.</param>
        /// <param name="sortOrder">Initial value of SortOrder.</param>
        /// <param name="createdOn">Initial value of CreatedOn.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        public static Collection CreateCollection(int collectionId, string language, string title, string descriptionShort, string description, global::System.DateTime validFrom, global::System.DateTime validTo, int collectionTypeId, string collectionPath, int sortOrder, global::System.DateTime createdOn, string createdBy)
        {
            Collection collection = new Collection();
            collection.CollectionId = collectionId;
            collection.Language = language;
            collection.Title = title;
            collection.DescriptionShort = descriptionShort;
            collection.Description = description;
            collection.ValidFrom = validFrom;
            collection.ValidTo = validTo;
            collection.CollectionTypeId = collectionTypeId;
            collection.CollectionPath = collectionPath;
            collection.SortOrder = sortOrder;
            collection.CreatedOn = createdOn;
            collection.CreatedBy = createdBy;
            return collection;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// Primarykey 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int CollectionId
        {
            get
            {
                int value = _CollectionId;
                OnGetCollectionId(ref value);
                return value;
            }
            set
            {
                if (_CollectionId != value)
                {
                  OnCollectionIdChanging(ref value);
                  ReportPropertyChanging("CollectionId");
                  _CollectionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CollectionId");
                  OnCollectionIdChanged();
              }
            }
        }
        private int _CollectionId;
        partial void OnGetCollectionId(ref int value);
        partial void OnCollectionIdChanging(ref int value);
        partial void OnCollectionIdChanged();
    
        /// <summary>
        /// Points to the parent collection
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentId
        {
            get
            {
                int? value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private int? _ParentId;
        partial void OnGetParentId(ref int? value);
        partial void OnParentIdChanging(ref int? value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// The language as ISO code de, en, fr
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(2)]
        [Required()]
        public virtual string Language
        {
            get
            {
                string value = _Language;
                OnGetLanguage(ref value);
                return value;
            }
            set
            {
                if (_Language != value)
                {
                  OnLanguageChanging(ref value);
                  ReportPropertyChanging("Language");
                  _Language = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Language");
                  OnLanguageChanged();
              }
            }
        }
        private string _Language = @"de";
        partial void OnGetLanguage(ref string value);
        partial void OnLanguageChanging(ref string value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// Title of the collection
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(255)]
        [Required()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// A short description of the collection
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(512)]
        [Required()]
        public virtual string DescriptionShort
        {
            get
            {
                string value = _DescriptionShort;
                OnGetDescriptionShort(ref value);
                return value;
            }
            set
            {
                if (_DescriptionShort != value)
                {
                  OnDescriptionShortChanging(ref value);
                  ReportPropertyChanging("DescriptionShort");
                  _DescriptionShort = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DescriptionShort");
                  OnDescriptionShortChanged();
              }
            }
        }
        private string _DescriptionShort;
        partial void OnGetDescriptionShort(ref string value);
        partial void OnDescriptionShortChanging(ref string value);
        partial void OnDescriptionShortChanged();
    
        /// <summary>
        /// A full description of the collection in markup language
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// From which point in time the collection should be visible to the users
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ValidFrom
        {
            get
            {
                global::System.DateTime value = _ValidFrom;
                OnGetValidFrom(ref value);
                return value;
            }
            set
            {
                if (_ValidFrom != value)
                {
                  OnValidFromChanging(ref value);
                  ReportPropertyChanging("ValidFrom");
                  _ValidFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidFrom");
                  OnValidFromChanged();
              }
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnGetValidFrom(ref global::System.DateTime value);
        partial void OnValidFromChanging(ref global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// Until which point in time the collection should be visible to the users
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ValidTo
        {
            get
            {
                global::System.DateTime value = _ValidTo;
                OnGetValidTo(ref value);
                return value;
            }
            set
            {
                if (_ValidTo != value)
                {
                  OnValidToChanging(ref value);
                  ReportPropertyChanging("ValidTo");
                  _ValidTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidTo");
                  OnValidToChanged();
              }
            }
        }
        private global::System.DateTime _ValidTo;
        partial void OnGetValidTo(ref global::System.DateTime value);
        partial void OnValidToChanging(ref global::System.DateTime value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// Indicates the type of collections: Themenblöcke and Ausstellungen (Topics and Collections)
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int CollectionTypeId
        {
            get
            {
                int value = _CollectionTypeId;
                OnGetCollectionTypeId(ref value);
                return value;
            }
            set
            {
                if (_CollectionTypeId != value)
                {
                  OnCollectionTypeIdChanging(ref value);
                  ReportPropertyChanging("CollectionTypeId");
                  _CollectionTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CollectionTypeId");
                  OnCollectionTypeIdChanged();
              }
            }
        }
        private int _CollectionTypeId;
        partial void OnGetCollectionTypeId(ref int value);
        partial void OnCollectionTypeIdChanging(ref int value);
        partial void OnCollectionTypeIdChanged();
    
        /// <summary>
        /// An image that gives a hint to the collection
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual byte[] Image
        {
            get
            {
                byte[] value = _Image;
                OnGetImage(ref value);
                return value;
            }
            set
            {
                if (_Image != value)
                {
                  OnImageChanging(ref value);
                  ReportPropertyChanging("Image");
                  _Image = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Image");
                  OnImageChanged();
              }
            }
        }
        private byte[] _Image;
        partial void OnGetImage(ref byte[] value);
        partial void OnImageChanging(ref byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// The thumbnail to the image
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual byte[] Thumbnail
        {
            get
            {
                byte[] value = _Thumbnail;
                OnGetThumbnail(ref value);
                return value;
            }
            set
            {
                if (_Thumbnail != value)
                {
                  OnThumbnailChanging(ref value);
                  ReportPropertyChanging("Thumbnail");
                  _Thumbnail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Thumbnail");
                  OnThumbnailChanged();
              }
            }
        }
        private byte[] _Thumbnail;
        partial void OnGetThumbnail(ref byte[] value);
        partial void OnThumbnailChanging(ref byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// The accessibility help information for the image
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ImageAltText
        {
            get
            {
                string value = _ImageAltText;
                OnGetImageAltText(ref value);
                return value;
            }
            set
            {
                if (_ImageAltText != value)
                {
                  OnImageAltTextChanging(ref value);
                  ReportPropertyChanging("ImageAltText");
                  _ImageAltText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImageAltText");
                  OnImageAltTextChanged();
              }
            }
        }
        private string _ImageAltText;
        partial void OnGetImageAltText(ref string value);
        partial void OnImageAltTextChanging(ref string value);
        partial void OnImageAltTextChanged();
    
        /// <summary>
        /// The mime type of the image
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ImageMimeType
        {
            get
            {
                string value = _ImageMimeType;
                OnGetImageMimeType(ref value);
                return value;
            }
            set
            {
                if (_ImageMimeType != value)
                {
                  OnImageMimeTypeChanging(ref value);
                  ReportPropertyChanging("ImageMimeType");
                  _ImageMimeType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImageMimeType");
                  OnImageMimeTypeChanged();
              }
            }
        }
        private string _ImageMimeType;
        partial void OnGetImageMimeType(ref string value);
        partial void OnImageMimeTypeChanging(ref string value);
        partial void OnImageMimeTypeChanged();
    
        /// <summary>
        /// The URL that will lead the user to the collection details
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(4000)]
        public virtual string Link
        {
            get
            {
                string value = _Link;
                OnGetLink(ref value);
                return value;
            }
            set
            {
                if (_Link != value)
                {
                  OnLinkChanging(ref value);
                  ReportPropertyChanging("Link");
                  _Link = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Link");
                  OnLinkChanged();
              }
            }
        }
        private string _Link;
        partial void OnGetLink(ref string value);
        partial void OnLinkChanging(ref string value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// The path of the item consisting of a padded string of the ids from first parent to current item.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(400)]
        [Required()]
        public virtual string CollectionPath
        {
            get
            {
                string value = _CollectionPath;
                OnGetCollectionPath(ref value);
                return value;
            }
            set
            {
                if (_CollectionPath != value)
                {
                  OnCollectionPathChanging(ref value);
                  ReportPropertyChanging("CollectionPath");
                  _CollectionPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CollectionPath");
                  OnCollectionPathChanged();
              }
            }
        }
        private string _CollectionPath;
        partial void OnGetCollectionPath(ref string value);
        partial void OnCollectionPathChanging(ref string value);
        partial void OnCollectionPathChanged();
    
        /// <summary>
        /// Allows to order the collections in a specific way
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int SortOrder
        {
            get
            {
                int value = _SortOrder;
                OnGetSortOrder(ref value);
                return value;
            }
            set
            {
                if (_SortOrder != value)
                {
                  OnSortOrderChanging(ref value);
                  ReportPropertyChanging("SortOrder");
                  _SortOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortOrder");
                  OnSortOrderChanged();
              }
            }
        }
        private int _SortOrder = 0;
        partial void OnGetSortOrder(ref int value);
        partial void OnSortOrderChanging(ref int value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// Date when record was added
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime CreatedOn
        {
            get
            {
                global::System.DateTime value = _CreatedOn;
                OnGetCreatedOn(ref value);
                return value;
            }
            set
            {
                if (_CreatedOn != value)
                {
                  OnCreatedOnChanging(ref value);
                  ReportPropertyChanging("CreatedOn");
                  _CreatedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedOn");
                  OnCreatedOnChanged();
              }
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnGetCreatedOn(ref global::System.DateTime value);
        partial void OnCreatedOnChanging(ref global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// User that added the record
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(255)]
        [Required()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// Date when the record was modified
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ModifiedOn
        {
            get
            {
                global::System.DateTime? value = _ModifiedOn;
                OnGetModifiedOn(ref value);
                return value;
            }
            set
            {
                if (_ModifiedOn != value)
                {
                  OnModifiedOnChanging(ref value);
                  ReportPropertyChanging("ModifiedOn");
                  _ModifiedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModifiedOn");
                  OnModifiedOnChanged();
              }
            }
        }
        private global::System.DateTime? _ModifiedOn;
        partial void OnGetModifiedOn(ref global::System.DateTime? value);
        partial void OnModifiedOnChanging(ref global::System.DateTime? value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// User that modified the record
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ModifiedBy
        {
            get
            {
                string value = _ModifiedBy;
                OnGetModifiedBy(ref value);
                return value;
            }
            set
            {
                if (_ModifiedBy != value)
                {
                  OnModifiedByChanging(ref value);
                  ReportPropertyChanging("ModifiedBy");
                  _ModifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ModifiedBy");
                  OnModifiedByChanged();
              }
            }
        }
        private string _ModifiedBy;
        partial void OnGetModifiedBy(ref string value);
        partial void OnModifiedByChanging(ref string value);
        partial void OnModifiedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ChildCollections in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "Collection_Collection", "ChildCollections")]
        public virtual EntityCollection<Collection> ChildCollections
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "ChildCollections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "ChildCollections", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "Collection_Collection", "Parent")]
        public virtual Collection Parent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "Parent").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "Parent").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Collection> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "Parent");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "Parent", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Collection>("CMI.Access.Sql.Viaduc.EF.Collection_Collection", "Parent").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.CollectionListItem in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CollectionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="CollectionListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionListItem : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CollectionListItem object.
        /// </summary>
        /// <param name="collectionId">Initial value of CollectionId.</param>
        /// <param name="language">Initial value of Language.</param>
        /// <param name="title">Initial value of Title.</param>
        /// <param name="descriptionShort">Initial value of DescriptionShort.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="validFrom">Initial value of ValidFrom.</param>
        /// <param name="validTo">Initial value of ValidTo.</param>
        /// <param name="collectionTypeId">Initial value of CollectionTypeId.</param>
        /// <param name="collectionPath">Initial value of CollectionPath.</param>
        /// <param name="sortOrder">Initial value of SortOrder.</param>
        /// <param name="createdOn">Initial value of CreatedOn.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        public static CollectionListItem CreateCollectionListItem(int collectionId, string language, string title, string descriptionShort, string description, global::System.DateTime validFrom, global::System.DateTime validTo, int collectionTypeId, string collectionPath, int sortOrder, global::System.DateTime createdOn, string createdBy)
        {
            CollectionListItem collectionListItem = new CollectionListItem();
            collectionListItem.CollectionId = collectionId;
            collectionListItem.Language = language;
            collectionListItem.Title = title;
            collectionListItem.DescriptionShort = descriptionShort;
            collectionListItem.Description = description;
            collectionListItem.ValidFrom = validFrom;
            collectionListItem.ValidTo = validTo;
            collectionListItem.CollectionTypeId = collectionTypeId;
            collectionListItem.CollectionPath = collectionPath;
            collectionListItem.SortOrder = sortOrder;
            collectionListItem.CreatedOn = createdOn;
            collectionListItem.CreatedBy = createdBy;
            return collectionListItem;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CollectionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int CollectionId
        {
            get
            {
                int value = _CollectionId;
                OnGetCollectionId(ref value);
                return value;
            }
            set
            {
                if (_CollectionId != value)
                {
                  OnCollectionIdChanging(ref value);
                  ReportPropertyChanging("CollectionId");
                  _CollectionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CollectionId");
                  OnCollectionIdChanged();
              }
            }
        }
        private int _CollectionId;
        partial void OnGetCollectionId(ref int value);
        partial void OnCollectionIdChanging(ref int value);
        partial void OnCollectionIdChanged();
    
        /// <summary>
        /// There are no comments for ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentId
        {
            get
            {
                int? value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private int? _ParentId;
        partial void OnGetParentId(ref int? value);
        partial void OnParentIdChanging(ref int? value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// There are no comments for Language in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(2)]
        [Required()]
        public virtual string Language
        {
            get
            {
                string value = _Language;
                OnGetLanguage(ref value);
                return value;
            }
            set
            {
                if (_Language != value)
                {
                  OnLanguageChanging(ref value);
                  ReportPropertyChanging("Language");
                  _Language = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Language");
                  OnLanguageChanged();
              }
            }
        }
        private string _Language;
        partial void OnGetLanguage(ref string value);
        partial void OnLanguageChanging(ref string value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(255)]
        [Required()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for DescriptionShort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(512)]
        [Required()]
        public virtual string DescriptionShort
        {
            get
            {
                string value = _DescriptionShort;
                OnGetDescriptionShort(ref value);
                return value;
            }
            set
            {
                if (_DescriptionShort != value)
                {
                  OnDescriptionShortChanging(ref value);
                  ReportPropertyChanging("DescriptionShort");
                  _DescriptionShort = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DescriptionShort");
                  OnDescriptionShortChanged();
              }
            }
        }
        private string _DescriptionShort;
        partial void OnGetDescriptionShort(ref string value);
        partial void OnDescriptionShortChanging(ref string value);
        partial void OnDescriptionShortChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for ValidFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ValidFrom
        {
            get
            {
                global::System.DateTime value = _ValidFrom;
                OnGetValidFrom(ref value);
                return value;
            }
            set
            {
                if (_ValidFrom != value)
                {
                  OnValidFromChanging(ref value);
                  ReportPropertyChanging("ValidFrom");
                  _ValidFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidFrom");
                  OnValidFromChanged();
              }
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnGetValidFrom(ref global::System.DateTime value);
        partial void OnValidFromChanging(ref global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// There are no comments for ValidTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ValidTo
        {
            get
            {
                global::System.DateTime value = _ValidTo;
                OnGetValidTo(ref value);
                return value;
            }
            set
            {
                if (_ValidTo != value)
                {
                  OnValidToChanging(ref value);
                  ReportPropertyChanging("ValidTo");
                  _ValidTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidTo");
                  OnValidToChanged();
              }
            }
        }
        private global::System.DateTime _ValidTo;
        partial void OnGetValidTo(ref global::System.DateTime value);
        partial void OnValidToChanging(ref global::System.DateTime value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// There are no comments for CollectionTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int CollectionTypeId
        {
            get
            {
                int value = _CollectionTypeId;
                OnGetCollectionTypeId(ref value);
                return value;
            }
            set
            {
                if (_CollectionTypeId != value)
                {
                  OnCollectionTypeIdChanging(ref value);
                  ReportPropertyChanging("CollectionTypeId");
                  _CollectionTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CollectionTypeId");
                  OnCollectionTypeIdChanged();
              }
            }
        }
        private int _CollectionTypeId;
        partial void OnGetCollectionTypeId(ref int value);
        partial void OnCollectionTypeIdChanging(ref int value);
        partial void OnCollectionTypeIdChanged();
    
        /// <summary>
        /// There are no comments for ImageAltText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ImageAltText
        {
            get
            {
                string value = _ImageAltText;
                OnGetImageAltText(ref value);
                return value;
            }
            set
            {
                if (_ImageAltText != value)
                {
                  OnImageAltTextChanging(ref value);
                  ReportPropertyChanging("ImageAltText");
                  _ImageAltText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImageAltText");
                  OnImageAltTextChanged();
              }
            }
        }
        private string _ImageAltText;
        partial void OnGetImageAltText(ref string value);
        partial void OnImageAltTextChanging(ref string value);
        partial void OnImageAltTextChanged();
    
        /// <summary>
        /// There are no comments for ImageMimeType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ImageMimeType
        {
            get
            {
                string value = _ImageMimeType;
                OnGetImageMimeType(ref value);
                return value;
            }
            set
            {
                if (_ImageMimeType != value)
                {
                  OnImageMimeTypeChanging(ref value);
                  ReportPropertyChanging("ImageMimeType");
                  _ImageMimeType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImageMimeType");
                  OnImageMimeTypeChanged();
              }
            }
        }
        private string _ImageMimeType;
        partial void OnGetImageMimeType(ref string value);
        partial void OnImageMimeTypeChanging(ref string value);
        partial void OnImageMimeTypeChanged();
    
        /// <summary>
        /// There are no comments for Link in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(4000)]
        public virtual string Link
        {
            get
            {
                string value = _Link;
                OnGetLink(ref value);
                return value;
            }
            set
            {
                if (_Link != value)
                {
                  OnLinkChanging(ref value);
                  ReportPropertyChanging("Link");
                  _Link = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Link");
                  OnLinkChanged();
              }
            }
        }
        private string _Link;
        partial void OnGetLink(ref string value);
        partial void OnLinkChanging(ref string value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// There are no comments for CollectionPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(400)]
        [Required()]
        public virtual string CollectionPath
        {
            get
            {
                string value = _CollectionPath;
                OnGetCollectionPath(ref value);
                return value;
            }
            set
            {
                if (_CollectionPath != value)
                {
                  OnCollectionPathChanging(ref value);
                  ReportPropertyChanging("CollectionPath");
                  _CollectionPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CollectionPath");
                  OnCollectionPathChanged();
              }
            }
        }
        private string _CollectionPath;
        partial void OnGetCollectionPath(ref string value);
        partial void OnCollectionPathChanging(ref string value);
        partial void OnCollectionPathChanged();
    
        /// <summary>
        /// There are no comments for SortOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int SortOrder
        {
            get
            {
                int value = _SortOrder;
                OnGetSortOrder(ref value);
                return value;
            }
            set
            {
                if (_SortOrder != value)
                {
                  OnSortOrderChanging(ref value);
                  ReportPropertyChanging("SortOrder");
                  _SortOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortOrder");
                  OnSortOrderChanged();
              }
            }
        }
        private int _SortOrder;
        partial void OnGetSortOrder(ref int value);
        partial void OnSortOrderChanging(ref int value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// There are no comments for CreatedOn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime CreatedOn
        {
            get
            {
                global::System.DateTime value = _CreatedOn;
                OnGetCreatedOn(ref value);
                return value;
            }
            set
            {
                if (_CreatedOn != value)
                {
                  OnCreatedOnChanging(ref value);
                  ReportPropertyChanging("CreatedOn");
                  _CreatedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedOn");
                  OnCreatedOnChanged();
              }
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnGetCreatedOn(ref global::System.DateTime value);
        partial void OnCreatedOnChanging(ref global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(255)]
        [Required()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for ModifiedOn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ModifiedOn
        {
            get
            {
                global::System.DateTime? value = _ModifiedOn;
                OnGetModifiedOn(ref value);
                return value;
            }
            set
            {
                if (_ModifiedOn != value)
                {
                  OnModifiedOnChanging(ref value);
                  ReportPropertyChanging("ModifiedOn");
                  _ModifiedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModifiedOn");
                  OnModifiedOnChanged();
              }
            }
        }
        private global::System.DateTime? _ModifiedOn;
        partial void OnGetModifiedOn(ref global::System.DateTime? value);
        partial void OnModifiedOnChanging(ref global::System.DateTime? value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string ModifiedBy
        {
            get
            {
                string value = _ModifiedBy;
                OnGetModifiedBy(ref value);
                return value;
            }
            set
            {
                if (_ModifiedBy != value)
                {
                  OnModifiedByChanging(ref value);
                  ReportPropertyChanging("ModifiedBy");
                  _ModifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ModifiedBy");
                  OnModifiedByChanged();
              }
            }
        }
        private string _ModifiedBy;
        partial void OnGetModifiedBy(ref string value);
        partial void OnModifiedByChanging(ref string value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(255)]
        public virtual string Parent
        {
            get
            {
                string value = _Parent;
                OnGetParent(ref value);
                return value;
            }
            set
            {
                if (_Parent != value)
                {
                  OnParentChanging(ref value);
                  ReportPropertyChanging("Parent");
                  _Parent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Parent");
                  OnParentChanged();
              }
            }
        }
        private string _Parent;
        partial void OnGetParent(ref string value);
        partial void OnParentChanging(ref string value);
        partial void OnParentChanged();
    
        /// <summary>
        /// There are no comments for ChildCollections in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChildCollections
        {
            get
            {
                string value = _ChildCollections;
                OnGetChildCollections(ref value);
                return value;
            }
            set
            {
                if (_ChildCollections != value)
                {
                  OnChildCollectionsChanging(ref value);
                  ReportPropertyChanging("ChildCollections");
                  _ChildCollections = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChildCollections");
                  OnChildCollectionsChanged();
              }
            }
        }
        private string _ChildCollections;
        partial void OnGetChildCollections(ref string value);
        partial void OnChildCollectionsChanging(ref string value);
        partial void OnChildCollectionsChanged();

        #endregion
    }

    /// <summary>
    /// Enthält Benutzer, die sich an Viaduc angemeldet haben
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="ApplicationUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationUser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ApplicationUser object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="created">Initial value of Created.</param>
        /// <param name="updated">Initial value of Updated.</param>
        /// <param name="fulltext">Initial value of Fulltext.</param>
        /// <param name="language">Initial value of Language.</param>
        /// <param name="createdOn">Initial value of CreatedOn.</param>
        /// <param name="modifiedOn">Initial value of ModifiedOn.</param>
        /// <param name="isIdentifiedUser">Initial value of IsIdentifiedUser.</param>
        /// <param name="researcherGroup">Initial value of ResearcherGroup.</param>
        /// <param name="barInternalConsultation">Initial value of BarInternalConsultation.</param>
        public static ApplicationUser CreateApplicationUser(string iD, global::System.DateTime created, global::System.DateTime updated, string fulltext, string language, global::System.DateTime createdOn, global::System.DateTime modifiedOn, bool isIdentifiedUser, bool researcherGroup, bool barInternalConsultation)
        {
            ApplicationUser applicationUser = new ApplicationUser();
            applicationUser.ID = iD;
            applicationUser.Created = created;
            applicationUser.Updated = updated;
            applicationUser.Fulltext = fulltext;
            applicationUser.Language = language;
            applicationUser.CreatedOn = createdOn;
            applicationUser.ModifiedOn = modifiedOn;
            applicationUser.IsIdentifiedUser = isIdentifiedUser;
            applicationUser.ResearcherGroup = researcherGroup;
            applicationUser.BarInternalConsultation = barInternalConsultation;
            return applicationUser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// Vom eIAM Token Claim /identity/claims/nameidentifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [StringLength(200)]
        [Required()]
        public virtual string ID
        {
            get
            {
                string value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private string _ID;
        partial void OnGetID(ref string value);
        partial void OnIDChanging(ref string value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Vom eIAM Token Claim /identity/claims/surname
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string FamilyName
        {
            get
            {
                string value = _FamilyName;
                OnGetFamilyName(ref value);
                return value;
            }
            set
            {
                if (_FamilyName != value)
                {
                  OnFamilyNameChanging(ref value);
                  ReportPropertyChanging("FamilyName");
                  _FamilyName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FamilyName");
                  OnFamilyNameChanged();
              }
            }
        }
        private string _FamilyName;
        partial void OnGetFamilyName(ref string value);
        partial void OnFamilyNameChanging(ref string value);
        partial void OnFamilyNameChanged();
    
        /// <summary>
        /// Vom eIAM Token Claim /identity/claims/givenname
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Organization
        {
            get
            {
                string value = _Organization;
                OnGetOrganization(ref value);
                return value;
            }
            set
            {
                if (_Organization != value)
                {
                  OnOrganizationChanging(ref value);
                  ReportPropertyChanging("Organization");
                  _Organization = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Organization");
                  OnOrganizationChanged();
              }
            }
        }
        private string _Organization;
        partial void OnGetOrganization(ref string value);
        partial void OnOrganizationChanging(ref string value);
        partial void OnOrganizationChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Street
        {
            get
            {
                string value = _Street;
                OnGetStreet(ref value);
                return value;
            }
            set
            {
                if (_Street != value)
                {
                  OnStreetChanging(ref value);
                  ReportPropertyChanging("Street");
                  _Street = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Street");
                  OnStreetChanged();
              }
            }
        }
        private string _Street;
        partial void OnGetStreet(ref string value);
        partial void OnStreetChanging(ref string value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string StreetAttachment
        {
            get
            {
                string value = _StreetAttachment;
                OnGetStreetAttachment(ref value);
                return value;
            }
            set
            {
                if (_StreetAttachment != value)
                {
                  OnStreetAttachmentChanging(ref value);
                  ReportPropertyChanging("StreetAttachment");
                  _StreetAttachment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StreetAttachment");
                  OnStreetAttachmentChanged();
              }
            }
        }
        private string _StreetAttachment;
        partial void OnGetStreetAttachment(ref string value);
        partial void OnStreetAttachmentChanging(ref string value);
        partial void OnStreetAttachmentChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string ZipCode
        {
            get
            {
                string value = _ZipCode;
                OnGetZipCode(ref value);
                return value;
            }
            set
            {
                if (_ZipCode != value)
                {
                  OnZipCodeChanging(ref value);
                  ReportPropertyChanging("ZipCode");
                  _ZipCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZipCode");
                  OnZipCodeChanged();
              }
            }
        }
        private string _ZipCode;
        partial void OnGetZipCode(ref string value);
        partial void OnZipCodeChanging(ref string value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Town
        {
            get
            {
                string value = _Town;
                OnGetTown(ref value);
                return value;
            }
            set
            {
                if (_Town != value)
                {
                  OnTownChanging(ref value);
                  ReportPropertyChanging("Town");
                  _Town = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Town");
                  OnTownChanged();
              }
            }
        }
        private string _Town;
        partial void OnGetTown(ref string value);
        partial void OnTownChanging(ref string value);
        partial void OnTownChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(10)]
        public virtual string CountryCode
        {
            get
            {
                string value = _CountryCode;
                OnGetCountryCode(ref value);
                return value;
            }
            set
            {
                if (_CountryCode != value)
                {
                  OnCountryCodeChanging(ref value);
                  ReportPropertyChanging("CountryCode");
                  _CountryCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CountryCode");
                  OnCountryCodeChanged();
              }
            }
        }
        private string _CountryCode;
        partial void OnGetCountryCode(ref string value);
        partial void OnCountryCodeChanging(ref string value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// Vom eIAM Token Claim /identity/claims/emailaddress
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string EmailAddress
        {
            get
            {
                string value = _EmailAddress;
                OnGetEmailAddress(ref value);
                return value;
            }
            set
            {
                if (_EmailAddress != value)
                {
                  OnEmailAddressChanging(ref value);
                  ReportPropertyChanging("EmailAddress");
                  _EmailAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmailAddress");
                  OnEmailAddressChanged();
              }
            }
        }
        private string _EmailAddress;
        partial void OnGetEmailAddress(ref string value);
        partial void OnEmailAddressChanging(ref string value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string PhoneNumber
        {
            get
            {
                string value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private string _PhoneNumber;
        partial void OnGetPhoneNumber(ref string value);
        partial void OnPhoneNumberChanging(ref string value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// Der Benutzer kann diese Information selber erfassen
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string SkypeName
        {
            get
            {
                string value = _SkypeName;
                OnGetSkypeName(ref value);
                return value;
            }
            set
            {
                if (_SkypeName != value)
                {
                  OnSkypeNameChanging(ref value);
                  ReportPropertyChanging("SkypeName");
                  _SkypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SkypeName");
                  OnSkypeNameChanged();
              }
            }
        }
        private string _SkypeName;
        partial void OnGetSkypeName(ref string value);
        partial void OnSkypeNameChanging(ref string value);
        partial void OnSkypeNameChanged();
    
        /// <summary>
        /// There are no comments for Setting in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Setting
        {
            get
            {
                string value = _Setting;
                OnGetSetting(ref value);
                return value;
            }
            set
            {
                if (_Setting != value)
                {
                  OnSettingChanging(ref value);
                  ReportPropertyChanging("Setting");
                  _Setting = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Setting");
                  OnSettingChanged();
              }
            }
        }
        private string _Setting;
        partial void OnGetSetting(ref string value);
        partial void OnSettingChanging(ref string value);
        partial void OnSettingChanged();
    
        /// <summary>
        /// Claims (json) von der letzten Anmeldung
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Claims
        {
            get
            {
                string value = _Claims;
                OnGetClaims(ref value);
                return value;
            }
            set
            {
                if (_Claims != value)
                {
                  OnClaimsChanging(ref value);
                  ReportPropertyChanging("Claims");
                  _Claims = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Claims");
                  OnClaimsChanged();
              }
            }
        }
        private string _Claims;
        partial void OnGetClaims(ref string value);
        partial void OnClaimsChanging(ref string value);
        partial void OnClaimsChanged();
    
        /// <summary>
        /// Erstellungsdatum
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime Created
        {
            get
            {
                global::System.DateTime value = _Created;
                OnGetCreated(ref value);
                return value;
            }
            set
            {
                if (_Created != value)
                {
                  OnCreatedChanging(ref value);
                  ReportPropertyChanging("Created");
                  _Created = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Created");
                  OnCreatedChanged();
              }
            }
        }
        private global::System.DateTime _Created;
        partial void OnGetCreated(ref global::System.DateTime value);
        partial void OnCreatedChanging(ref global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// Änderungsdatum
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime Updated
        {
            get
            {
                global::System.DateTime value = _Updated;
                OnGetUpdated(ref value);
                return value;
            }
            set
            {
                if (_Updated != value)
                {
                  OnUpdatedChanging(ref value);
                  ReportPropertyChanging("Updated");
                  _Updated = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Updated");
                  OnUpdatedChanged();
              }
            }
        }
        private global::System.DateTime _Updated;
        partial void OnGetUpdated(ref global::System.DateTime value);
        partial void OnUpdatedChanging(ref global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// Volltext
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(1808)]
        [Required()]
        public virtual string Fulltext
        {
            get
            {
                string value = _Fulltext;
                OnGetFulltext(ref value);
                return value;
            }
            set
            {
                if (_Fulltext != value)
                {
                  OnFulltextChanging(ref value);
                  ReportPropertyChanging("Fulltext");
                  _Fulltext = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Fulltext");
                  OnFulltextChanged();
              }
            }
        }
        private string _Fulltext;
        partial void OnGetFulltext(ref string value);
        partial void OnFulltextChanging(ref string value);
        partial void OnFulltextChanged();
    
        /// <summary>
        /// Vom eIAM Benutzer externe ID
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(100)]
        public virtual string UserExtId
        {
            get
            {
                string value = _UserExtId;
                OnGetUserExtId(ref value);
                return value;
            }
            set
            {
                if (_UserExtId != value)
                {
                  OnUserExtIdChanging(ref value);
                  ReportPropertyChanging("UserExtId");
                  _UserExtId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserExtId");
                  OnUserExtIdChanged();
              }
            }
        }
        private string _UserExtId;
        partial void OnGetUserExtId(ref string value);
        partial void OnUserExtIdChanging(ref string value);
        partial void OnUserExtIdChanged();
    
        /// <summary>
        /// Sprache, in welcher der Benutzer EMails empfangen möchte.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(2)]
        [Required()]
        public virtual string Language
        {
            get
            {
                string value = _Language;
                OnGetLanguage(ref value);
                return value;
            }
            set
            {
                if (_Language != value)
                {
                  OnLanguageChanging(ref value);
                  ReportPropertyChanging("Language");
                  _Language = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Language");
                  OnLanguageChanged();
              }
            }
        }
        private string _Language = @"de";
        partial void OnGetLanguage(ref string value);
        partial void OnLanguageChanging(ref string value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// There are no comments for CreatedOn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime CreatedOn
        {
            get
            {
                global::System.DateTime value = _CreatedOn;
                OnGetCreatedOn(ref value);
                return value;
            }
            set
            {
                if (_CreatedOn != value)
                {
                  OnCreatedOnChanging(ref value);
                  ReportPropertyChanging("CreatedOn");
                  _CreatedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedOn");
                  OnCreatedOnChanged();
              }
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnGetCreatedOn(ref global::System.DateTime value);
        partial void OnCreatedOnChanging(ref global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(500)]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for ModifiedOn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ModifiedOn
        {
            get
            {
                global::System.DateTime value = _ModifiedOn;
                OnGetModifiedOn(ref value);
                return value;
            }
            set
            {
                if (_ModifiedOn != value)
                {
                  OnModifiedOnChanging(ref value);
                  ReportPropertyChanging("ModifiedOn");
                  _ModifiedOn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModifiedOn");
                  OnModifiedOnChanged();
              }
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnGetModifiedOn(ref global::System.DateTime value);
        partial void OnModifiedOnChanging(ref global::System.DateTime value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(500)]
        public virtual string ModifiedBy
        {
            get
            {
                string value = _ModifiedBy;
                OnGetModifiedBy(ref value);
                return value;
            }
            set
            {
                if (_ModifiedBy != value)
                {
                  OnModifiedByChanging(ref value);
                  ReportPropertyChanging("ModifiedBy");
                  _ModifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ModifiedBy");
                  OnModifiedByChanged();
              }
            }
        }
        private string _ModifiedBy;
        partial void OnGetModifiedBy(ref string value);
        partial void OnModifiedByChanging(ref string value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// There are no comments for Birthday in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? Birthday
        {
            get
            {
                global::System.DateTime? value = _Birthday;
                OnGetBirthday(ref value);
                return value;
            }
            set
            {
                if (_Birthday != value)
                {
                  OnBirthdayChanging(ref value);
                  ReportPropertyChanging("Birthday");
                  _Birthday = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Birthday");
                  OnBirthdayChanged();
              }
            }
        }
        private global::System.DateTime? _Birthday;
        partial void OnGetBirthday(ref global::System.DateTime? value);
        partial void OnBirthdayChanging(ref global::System.DateTime? value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// There are no comments for FabasoftDossier in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(1000)]
        public virtual string FabasoftDossier
        {
            get
            {
                string value = _FabasoftDossier;
                OnGetFabasoftDossier(ref value);
                return value;
            }
            set
            {
                if (_FabasoftDossier != value)
                {
                  OnFabasoftDossierChanging(ref value);
                  ReportPropertyChanging("FabasoftDossier");
                  _FabasoftDossier = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FabasoftDossier");
                  OnFabasoftDossierChanged();
              }
            }
        }
        private string _FabasoftDossier;
        partial void OnGetFabasoftDossier(ref string value);
        partial void OnFabasoftDossierChanging(ref string value);
        partial void OnFabasoftDossierChanged();
    
        /// <summary>
        /// In dieses Feld wird automatisch der Ablehnungsgrund eingetragen, welcher Swisscom beim Onboarding zurückgegeben hat.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(1000)]
        public virtual string ReasonForRejection
        {
            get
            {
                string value = _ReasonForRejection;
                OnGetReasonForRejection(ref value);
                return value;
            }
            set
            {
                if (_ReasonForRejection != value)
                {
                  OnReasonForRejectionChanging(ref value);
                  ReportPropertyChanging("ReasonForRejection");
                  _ReasonForRejection = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ReasonForRejection");
                  OnReasonForRejectionChanged();
              }
            }
        }
        private string _ReasonForRejection;
        partial void OnGetReasonForRejection(ref string value);
        partial void OnReasonForRejectionChanging(ref string value);
        partial void OnReasonForRejectionChanged();
    
        /// <summary>
        /// There are no comments for IsIdentifiedUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual bool IsIdentifiedUser
        {
            get
            {
                bool value = _IsIdentifiedUser;
                OnGetIsIdentifiedUser(ref value);
                return value;
            }
            set
            {
                if (_IsIdentifiedUser != value)
                {
                  OnIsIdentifiedUserChanging(ref value);
                  ReportPropertyChanging("IsIdentifiedUser");
                  _IsIdentifiedUser = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsIdentifiedUser");
                  OnIsIdentifiedUserChanged();
              }
            }
        }
        private bool _IsIdentifiedUser = true;
        partial void OnGetIsIdentifiedUser(ref bool value);
        partial void OnIsIdentifiedUserChanging(ref bool value);
        partial void OnIsIdentifiedUserChanged();
    
        /// <summary>
        /// There are no comments for RolePublicClient in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(3)]
        public virtual string RolePublicClient
        {
            get
            {
                string value = _RolePublicClient;
                OnGetRolePublicClient(ref value);
                return value;
            }
            set
            {
                if (_RolePublicClient != value)
                {
                  OnRolePublicClientChanging(ref value);
                  ReportPropertyChanging("RolePublicClient");
                  _RolePublicClient = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RolePublicClient");
                  OnRolePublicClientChanged();
              }
            }
        }
        private string _RolePublicClient;
        partial void OnGetRolePublicClient(ref string value);
        partial void OnRolePublicClientChanging(ref string value);
        partial void OnRolePublicClientChanged();
    
        /// <summary>
        /// There are no comments for EiamRoles in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(10)]
        public virtual string EiamRoles
        {
            get
            {
                string value = _EiamRoles;
                OnGetEiamRoles(ref value);
                return value;
            }
            set
            {
                if (_EiamRoles != value)
                {
                  OnEiamRolesChanging(ref value);
                  ReportPropertyChanging("EiamRoles");
                  _EiamRoles = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EiamRoles");
                  OnEiamRolesChanged();
              }
            }
        }
        private string _EiamRoles;
        partial void OnGetEiamRoles(ref string value);
        partial void OnEiamRolesChanging(ref string value);
        partial void OnEiamRolesChanged();
    
        /// <summary>
        /// There are no comments for ResearcherGroup in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual bool ResearcherGroup
        {
            get
            {
                bool value = _ResearcherGroup;
                OnGetResearcherGroup(ref value);
                return value;
            }
            set
            {
                if (_ResearcherGroup != value)
                {
                  OnResearcherGroupChanging(ref value);
                  ReportPropertyChanging("ResearcherGroup");
                  _ResearcherGroup = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ResearcherGroup");
                  OnResearcherGroupChanged();
              }
            }
        }
        private bool _ResearcherGroup = false;
        partial void OnGetResearcherGroup(ref bool value);
        partial void OnResearcherGroupChanging(ref bool value);
        partial void OnResearcherGroupChanged();
    
        /// <summary>
        /// There are no comments for BarInternalConsultation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual bool BarInternalConsultation
        {
            get
            {
                bool value = _BarInternalConsultation;
                OnGetBarInternalConsultation(ref value);
                return value;
            }
            set
            {
                if (_BarInternalConsultation != value)
                {
                  OnBarInternalConsultationChanging(ref value);
                  ReportPropertyChanging("BarInternalConsultation");
                  _BarInternalConsultation = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BarInternalConsultation");
                  OnBarInternalConsultationChanged();
              }
            }
        }
        private bool _BarInternalConsultation = false;
        partial void OnGetBarInternalConsultation(ref bool value);
        partial void OnBarInternalConsultationChanging(ref bool value);
        partial void OnBarInternalConsultationChanged();
    
        /// <summary>
        /// Beim erfolgreichem Onboarding mit Swisscom wird in dieses Feld automatisch ein von der Swisscom generiertes PDF abgelegt. Zudem kann in dieses Feld auch über den Management Client eine Datei hochgeladen werden.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual byte[] IdentifierDocument
        {
            get
            {
                byte[] value = _IdentifierDocument;
                OnGetIdentifierDocument(ref value);
                return value;
            }
            set
            {
                if (_IdentifierDocument != value)
                {
                  OnIdentifierDocumentChanging(ref value);
                  ReportPropertyChanging("IdentifierDocument");
                  _IdentifierDocument = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IdentifierDocument");
                  OnIdentifierDocumentChanged();
              }
            }
        }
        private byte[] _IdentifierDocument;
        partial void OnGetIdentifierDocument(ref byte[] value);
        partial void OnIdentifierDocumentChanging(ref byte[] value);
        partial void OnIdentifierDocumentChanged();
    
        /// <summary>
        /// There are no comments for MobileNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string MobileNumber
        {
            get
            {
                string value = _MobileNumber;
                OnGetMobileNumber(ref value);
                return value;
            }
            set
            {
                if (_MobileNumber != value)
                {
                  OnMobileNumberChanging(ref value);
                  ReportPropertyChanging("MobileNumber");
                  _MobileNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MobileNumber");
                  OnMobileNumberChanged();
              }
            }
        }
        private string _MobileNumber;
        partial void OnGetMobileNumber(ref string value);
        partial void OnMobileNumberChanging(ref string value);
        partial void OnMobileNumberChanged();
    
        /// <summary>
        /// Datum an dem das Feld ReasonForRejection gesetzt wurde
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ReasonForRejectionDate
        {
            get
            {
                global::System.DateTime? value = _ReasonForRejectionDate;
                OnGetReasonForRejectionDate(ref value);
                return value;
            }
            set
            {
                if (_ReasonForRejectionDate != value)
                {
                  OnReasonForRejectionDateChanging(ref value);
                  ReportPropertyChanging("ReasonForRejectionDate");
                  _ReasonForRejectionDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonForRejectionDate");
                  OnReasonForRejectionDateChanged();
              }
            }
        }
        private global::System.DateTime? _ReasonForRejectionDate;
        partial void OnGetReasonForRejectionDate(ref global::System.DateTime? value);
        partial void OnReasonForRejectionDateChanging(ref global::System.DateTime? value);
        partial void OnReasonForRejectionDateChanged();
    
        /// <summary>
        /// There are no comments for DownloadLimitDisabledUntil in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DownloadLimitDisabledUntil
        {
            get
            {
                global::System.DateTime? value = _DownloadLimitDisabledUntil;
                OnGetDownloadLimitDisabledUntil(ref value);
                return value;
            }
            set
            {
                if (_DownloadLimitDisabledUntil != value)
                {
                  OnDownloadLimitDisabledUntilChanging(ref value);
                  ReportPropertyChanging("DownloadLimitDisabledUntil");
                  _DownloadLimitDisabledUntil = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DownloadLimitDisabledUntil");
                  OnDownloadLimitDisabledUntilChanged();
              }
            }
        }
        private global::System.DateTime? _DownloadLimitDisabledUntil;
        partial void OnGetDownloadLimitDisabledUntil(ref global::System.DateTime? value);
        partial void OnDownloadLimitDisabledUntilChanging(ref global::System.DateTime? value);
        partial void OnDownloadLimitDisabledUntilChanged();
    
        /// <summary>
        /// Gibt an, bis wann beim Benutzer die Digitalisierungsbeschränkung aufgehoben wird.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DigitalisierungsbeschraenkungAufgehobenBis
        {
            get
            {
                global::System.DateTime? value = _DigitalisierungsbeschraenkungAufgehobenBis;
                OnGetDigitalisierungsbeschraenkungAufgehobenBis(ref value);
                return value;
            }
            set
            {
                if (_DigitalisierungsbeschraenkungAufgehobenBis != value)
                {
                  OnDigitalisierungsbeschraenkungAufgehobenBisChanging(ref value);
                  ReportPropertyChanging("DigitalisierungsbeschraenkungAufgehobenBis");
                  _DigitalisierungsbeschraenkungAufgehobenBis = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DigitalisierungsbeschraenkungAufgehobenBis");
                  OnDigitalisierungsbeschraenkungAufgehobenBisChanged();
              }
            }
        }
        private global::System.DateTime? _DigitalisierungsbeschraenkungAufgehobenBis;
        partial void OnGetDigitalisierungsbeschraenkungAufgehobenBis(ref global::System.DateTime? value);
        partial void OnDigitalisierungsbeschraenkungAufgehobenBisChanging(ref global::System.DateTime? value);
        partial void OnDigitalisierungsbeschraenkungAufgehobenBisChanged();
    
        /// <summary>
        /// There are no comments for QoAValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? QoAValue
        {
            get
            {
                int? value = _QoAValue;
                OnGetQoAValue(ref value);
                return value;
            }
            set
            {
                if (_QoAValue != value)
                {
                  OnQoAValueChanging(ref value);
                  ReportPropertyChanging("QoAValue");
                  _QoAValue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QoAValue");
                  OnQoAValueChanged();
              }
            }
        }
        private int? _QoAValue;
        partial void OnGetQoAValue(ref int? value);
        partial void OnQoAValueChanging(ref int? value);
        partial void OnQoAValueChanged();
    
        /// <summary>
        /// There are no comments for HomeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string HomeName
        {
            get
            {
                string value = _HomeName;
                OnGetHomeName(ref value);
                return value;
            }
            set
            {
                if (_HomeName != value)
                {
                  OnHomeNameChanging(ref value);
                  ReportPropertyChanging("HomeName");
                  _HomeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HomeName");
                  OnHomeNameChanged();
              }
            }
        }
        private string _HomeName;
        partial void OnGetHomeName(ref string value);
        partial void OnHomeNameChanging(ref string value);
        partial void OnHomeNameChanged();
    
        /// <summary>
        /// Enthält die ASP-Session ID falls der Benutzer nicht abgemeldet ist.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ActiveAspNetSessionId
        {
            get
            {
                string value = _ActiveAspNetSessionId;
                OnGetActiveAspNetSessionId(ref value);
                return value;
            }
            set
            {
                if (_ActiveAspNetSessionId != value)
                {
                  OnActiveAspNetSessionIdChanging(ref value);
                  ReportPropertyChanging("ActiveAspNetSessionId");
                  _ActiveAspNetSessionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ActiveAspNetSessionId");
                  OnActiveAspNetSessionIdChanged();
              }
            }
        }
        private string _ActiveAspNetSessionId = @"";
        partial void OnGetActiveAspNetSessionId(ref string value);
        partial void OnActiveAspNetSessionIdChanging(ref string value);
        partial void OnActiveAspNetSessionIdChanged();
    
        /// <summary>
        /// There are no comments for LastLoginDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastLoginDate
        {
            get
            {
                global::System.DateTime? value = _LastLoginDate;
                OnGetLastLoginDate(ref value);
                return value;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                  OnLastLoginDateChanging(ref value);
                  ReportPropertyChanging("LastLoginDate");
                  _LastLoginDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastLoginDate");
                  OnLastLoginDateChanged();
              }
            }
        }
        private global::System.DateTime? _LastLoginDate;
        partial void OnGetLastLoginDate(ref global::System.DateTime? value);
        partial void OnLastLoginDateChanging(ref global::System.DateTime? value);
        partial void OnLastLoginDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.ManuelleKorrektur in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ManuelleKorrekturId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="ManuelleKorrektur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManuelleKorrektur : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ManuelleKorrektur object.
        /// </summary>
        /// <param name="manuelleKorrekturId">Initial value of ManuelleKorrekturId.</param>
        /// <param name="veId">Initial value of VeId.</param>
        /// <param name="signatur">Initial value of Signatur.</param>
        /// <param name="schutzfristende">Initial value of Schutzfristende.</param>
        /// <param name="titel">Initial value of Titel.</param>
        /// <param name="erzeugtAm">Initial value of ErzeugtAm.</param>
        /// <param name="erzeugtVon">Initial value of ErzeugtVon.</param>
        /// <param name="anonymisierungsstatus">Initial value of Anonymisierungsstatus.</param>
        /// <param name="hierachiestufe">Initial value of Hierachiestufe.</param>
        /// <param name="aktenzeichen">Initial value of Aktenzeichen.</param>
        /// <param name="zugänglichkeitGemässBGA">Initial value of ZugänglichkeitGemässBGA.</param>
        /// <param name="anonymisiertZumErfassungszeitpunk">Initial value of AnonymisiertZumErfassungszeitpunk.</param>
        public static ManuelleKorrektur CreateManuelleKorrektur(int manuelleKorrekturId, int veId, string signatur, global::System.DateTime schutzfristende, string titel, global::System.DateTime erzeugtAm, string erzeugtVon, int anonymisierungsstatus, string hierachiestufe, string aktenzeichen, string zugänglichkeitGemässBGA, bool anonymisiertZumErfassungszeitpunk)
        {
            ManuelleKorrektur manuelleKorrektur = new ManuelleKorrektur();
            manuelleKorrektur.ManuelleKorrekturId = manuelleKorrekturId;
            manuelleKorrektur.VeId = veId;
            manuelleKorrektur.Signatur = signatur;
            manuelleKorrektur.Schutzfristende = schutzfristende;
            manuelleKorrektur.Titel = titel;
            manuelleKorrektur.ErzeugtAm = erzeugtAm;
            manuelleKorrektur.ErzeugtVon = erzeugtVon;
            manuelleKorrektur.Anonymisierungsstatus = anonymisierungsstatus;
            manuelleKorrektur.Hierachiestufe = hierachiestufe;
            manuelleKorrektur.Aktenzeichen = aktenzeichen;
            manuelleKorrektur.ZugänglichkeitGemässBGA = zugänglichkeitGemässBGA;
            manuelleKorrektur.AnonymisiertZumErfassungszeitpunk = anonymisiertZumErfassungszeitpunk;
            return manuelleKorrektur;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int ManuelleKorrekturId
        {
            get
            {
                int value = _ManuelleKorrekturId;
                OnGetManuelleKorrekturId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturId != value)
                {
                  OnManuelleKorrekturIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturId");
                  _ManuelleKorrekturId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturId");
                  OnManuelleKorrekturIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturId;
        partial void OnGetManuelleKorrekturId(ref int value);
        partial void OnManuelleKorrekturIdChanging(ref int value);
        partial void OnManuelleKorrekturIdChanged();
    
        /// <summary>
        /// There are no comments for VeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int VeId
        {
            get
            {
                int value = _VeId;
                OnGetVeId(ref value);
                return value;
            }
            set
            {
                if (_VeId != value)
                {
                  OnVeIdChanging(ref value);
                  ReportPropertyChanging("VeId");
                  _VeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VeId");
                  OnVeIdChanged();
              }
            }
        }
        private int _VeId;
        partial void OnGetVeId(ref int value);
        partial void OnVeIdChanging(ref int value);
        partial void OnVeIdChanged();
    
        /// <summary>
        /// There are no comments for Signatur in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual string Signatur
        {
            get
            {
                string value = _Signatur;
                OnGetSignatur(ref value);
                return value;
            }
            set
            {
                if (_Signatur != value)
                {
                  OnSignaturChanging(ref value);
                  ReportPropertyChanging("Signatur");
                  _Signatur = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Signatur");
                  OnSignaturChanged();
              }
            }
        }
        private string _Signatur;
        partial void OnGetSignatur(ref string value);
        partial void OnSignaturChanging(ref string value);
        partial void OnSignaturChanged();
    
        /// <summary>
        /// There are no comments for Schutzfristende in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime Schutzfristende
        {
            get
            {
                global::System.DateTime value = _Schutzfristende;
                OnGetSchutzfristende(ref value);
                return value;
            }
            set
            {
                if (_Schutzfristende != value)
                {
                  OnSchutzfristendeChanging(ref value);
                  ReportPropertyChanging("Schutzfristende");
                  _Schutzfristende = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Schutzfristende");
                  OnSchutzfristendeChanged();
              }
            }
        }
        private global::System.DateTime _Schutzfristende;
        partial void OnGetSchutzfristende(ref global::System.DateTime value);
        partial void OnSchutzfristendeChanging(ref global::System.DateTime value);
        partial void OnSchutzfristendeChanged();
    
        /// <summary>
        /// There are no comments for Titel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual string Titel
        {
            get
            {
                string value = _Titel;
                OnGetTitel(ref value);
                return value;
            }
            set
            {
                if (_Titel != value)
                {
                  OnTitelChanging(ref value);
                  ReportPropertyChanging("Titel");
                  _Titel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Titel");
                  OnTitelChanged();
              }
            }
        }
        private string _Titel;
        partial void OnGetTitel(ref string value);
        partial void OnTitelChanging(ref string value);
        partial void OnTitelChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtAm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ErzeugtAm
        {
            get
            {
                global::System.DateTime value = _ErzeugtAm;
                OnGetErzeugtAm(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtAm != value)
                {
                  OnErzeugtAmChanging(ref value);
                  ReportPropertyChanging("ErzeugtAm");
                  _ErzeugtAm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErzeugtAm");
                  OnErzeugtAmChanged();
              }
            }
        }
        private global::System.DateTime _ErzeugtAm;
        partial void OnGetErzeugtAm(ref global::System.DateTime value);
        partial void OnErzeugtAmChanging(ref global::System.DateTime value);
        partial void OnErzeugtAmChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtVon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(200)]
        [Required()]
        public virtual string ErzeugtVon
        {
            get
            {
                string value = _ErzeugtVon;
                OnGetErzeugtVon(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtVon != value)
                {
                  OnErzeugtVonChanging(ref value);
                  ReportPropertyChanging("ErzeugtVon");
                  _ErzeugtVon = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ErzeugtVon");
                  OnErzeugtVonChanged();
              }
            }
        }
        private string _ErzeugtVon;
        partial void OnGetErzeugtVon(ref string value);
        partial void OnErzeugtVonChanging(ref string value);
        partial void OnErzeugtVonChanged();
    
        /// <summary>
        /// There are no comments for GeändertAm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? GeändertAm
        {
            get
            {
                global::System.DateTime? value = _GeändertAm;
                OnGetGeändertAm(ref value);
                return value;
            }
            set
            {
                if (_GeändertAm != value)
                {
                  OnGeändertAmChanging(ref value);
                  ReportPropertyChanging("GeändertAm");
                  _GeändertAm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GeändertAm");
                  OnGeändertAmChanged();
              }
            }
        }
        private global::System.DateTime? _GeändertAm;
        partial void OnGetGeändertAm(ref global::System.DateTime? value);
        partial void OnGeändertAmChanging(ref global::System.DateTime? value);
        partial void OnGeändertAmChanged();
    
        /// <summary>
        /// There are no comments for GeändertVon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string GeändertVon
        {
            get
            {
                string value = _GeändertVon;
                OnGetGeändertVon(ref value);
                return value;
            }
            set
            {
                if (_GeändertVon != value)
                {
                  OnGeändertVonChanging(ref value);
                  ReportPropertyChanging("GeändertVon");
                  _GeändertVon = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("GeändertVon");
                  OnGeändertVonChanged();
              }
            }
        }
        private string _GeändertVon;
        partial void OnGetGeändertVon(ref string value);
        partial void OnGeändertVonChanging(ref string value);
        partial void OnGeändertVonChanged();
    
        /// <summary>
        /// There are no comments for Anonymisierungsstatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int Anonymisierungsstatus
        {
            get
            {
                int value = _Anonymisierungsstatus;
                OnGetAnonymisierungsstatus(ref value);
                return value;
            }
            set
            {
                if (_Anonymisierungsstatus != value)
                {
                  OnAnonymisierungsstatusChanging(ref value);
                  ReportPropertyChanging("Anonymisierungsstatus");
                  _Anonymisierungsstatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Anonymisierungsstatus");
                  OnAnonymisierungsstatusChanged();
              }
            }
        }
        private int _Anonymisierungsstatus;
        partial void OnGetAnonymisierungsstatus(ref int value);
        partial void OnAnonymisierungsstatusChanging(ref int value);
        partial void OnAnonymisierungsstatusChanged();
    
        /// <summary>
        /// There are no comments for Kommentar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Kommentar
        {
            get
            {
                string value = _Kommentar;
                OnGetKommentar(ref value);
                return value;
            }
            set
            {
                if (_Kommentar != value)
                {
                  OnKommentarChanging(ref value);
                  ReportPropertyChanging("Kommentar");
                  _Kommentar = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Kommentar");
                  OnKommentarChanged();
              }
            }
        }
        private string _Kommentar;
        partial void OnGetKommentar(ref string value);
        partial void OnKommentarChanging(ref string value);
        partial void OnKommentarChanged();
    
        /// <summary>
        /// There are no comments for Hierachiestufe in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(100)]
        [Required()]
        public virtual string Hierachiestufe
        {
            get
            {
                string value = _Hierachiestufe;
                OnGetHierachiestufe(ref value);
                return value;
            }
            set
            {
                if (_Hierachiestufe != value)
                {
                  OnHierachiestufeChanging(ref value);
                  ReportPropertyChanging("Hierachiestufe");
                  _Hierachiestufe = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Hierachiestufe");
                  OnHierachiestufeChanged();
              }
            }
        }
        private string _Hierachiestufe;
        partial void OnGetHierachiestufe(ref string value);
        partial void OnHierachiestufeChanging(ref string value);
        partial void OnHierachiestufeChanged();
    
        /// <summary>
        /// There are no comments for Aktenzeichen in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(200)]
        [Required()]
        public virtual string Aktenzeichen
        {
            get
            {
                string value = _Aktenzeichen;
                OnGetAktenzeichen(ref value);
                return value;
            }
            set
            {
                if (_Aktenzeichen != value)
                {
                  OnAktenzeichenChanging(ref value);
                  ReportPropertyChanging("Aktenzeichen");
                  _Aktenzeichen = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Aktenzeichen");
                  OnAktenzeichenChanged();
              }
            }
        }
        private string _Aktenzeichen;
        partial void OnGetAktenzeichen(ref string value);
        partial void OnAktenzeichenChanging(ref string value);
        partial void OnAktenzeichenChanged();
    
        /// <summary>
        /// There are no comments for Entstehungszeitraum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(100)]
        public virtual string Entstehungszeitraum
        {
            get
            {
                string value = _Entstehungszeitraum;
                OnGetEntstehungszeitraum(ref value);
                return value;
            }
            set
            {
                if (_Entstehungszeitraum != value)
                {
                  OnEntstehungszeitraumChanging(ref value);
                  ReportPropertyChanging("Entstehungszeitraum");
                  _Entstehungszeitraum = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Entstehungszeitraum");
                  OnEntstehungszeitraumChanged();
              }
            }
        }
        private string _Entstehungszeitraum;
        partial void OnGetEntstehungszeitraum(ref string value);
        partial void OnEntstehungszeitraumChanging(ref string value);
        partial void OnEntstehungszeitraumChanged();
    
        /// <summary>
        /// There are no comments for ZugänglichkeitGemässBGA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(100)]
        [Required()]
        public virtual string ZugänglichkeitGemässBGA
        {
            get
            {
                string value = _ZugänglichkeitGemässBGA;
                OnGetZugänglichkeitGemässBGA(ref value);
                return value;
            }
            set
            {
                if (_ZugänglichkeitGemässBGA != value)
                {
                  OnZugänglichkeitGemässBGAChanging(ref value);
                  ReportPropertyChanging("ZugänglichkeitGemässBGA");
                  _ZugänglichkeitGemässBGA = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ZugänglichkeitGemässBGA");
                  OnZugänglichkeitGemässBGAChanged();
              }
            }
        }
        private string _ZugänglichkeitGemässBGA;
        partial void OnGetZugänglichkeitGemässBGA(ref string value);
        partial void OnZugänglichkeitGemässBGAChanging(ref string value);
        partial void OnZugänglichkeitGemässBGAChanged();
    
        /// <summary>
        /// There are no comments for Schutzfristverzeichnung in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Schutzfristverzeichnung
        {
            get
            {
                string value = _Schutzfristverzeichnung;
                OnGetSchutzfristverzeichnung(ref value);
                return value;
            }
            set
            {
                if (_Schutzfristverzeichnung != value)
                {
                  OnSchutzfristverzeichnungChanging(ref value);
                  ReportPropertyChanging("Schutzfristverzeichnung");
                  _Schutzfristverzeichnung = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Schutzfristverzeichnung");
                  OnSchutzfristverzeichnungChanged();
              }
            }
        }
        private string _Schutzfristverzeichnung;
        partial void OnGetSchutzfristverzeichnung(ref string value);
        partial void OnSchutzfristverzeichnungChanging(ref string value);
        partial void OnSchutzfristverzeichnungChanged();
    
        /// <summary>
        /// There are no comments for ZuständigeStelle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(100)]
        public virtual string ZuständigeStelle
        {
            get
            {
                string value = _ZuständigeStelle;
                OnGetZuständigeStelle(ref value);
                return value;
            }
            set
            {
                if (_ZuständigeStelle != value)
                {
                  OnZuständigeStelleChanging(ref value);
                  ReportPropertyChanging("ZuständigeStelle");
                  _ZuständigeStelle = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZuständigeStelle");
                  OnZuständigeStelleChanged();
              }
            }
        }
        private string _ZuständigeStelle;
        partial void OnGetZuständigeStelle(ref string value);
        partial void OnZuständigeStelleChanging(ref string value);
        partial void OnZuständigeStelleChanged();
    
        /// <summary>
        /// There are no comments for Publikationsrechte in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Publikationsrechte
        {
            get
            {
                string value = _Publikationsrechte;
                OnGetPublikationsrechte(ref value);
                return value;
            }
            set
            {
                if (_Publikationsrechte != value)
                {
                  OnPublikationsrechteChanging(ref value);
                  ReportPropertyChanging("Publikationsrechte");
                  _Publikationsrechte = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Publikationsrechte");
                  OnPublikationsrechteChanged();
              }
            }
        }
        private string _Publikationsrechte;
        partial void OnGetPublikationsrechte(ref string value);
        partial void OnPublikationsrechteChanging(ref string value);
        partial void OnPublikationsrechteChanged();
    
        /// <summary>
        /// There are no comments for AnonymisiertZumErfassungszeitpunk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual bool AnonymisiertZumErfassungszeitpunk
        {
            get
            {
                bool value = _AnonymisiertZumErfassungszeitpunk;
                OnGetAnonymisiertZumErfassungszeitpunk(ref value);
                return value;
            }
            set
            {
                if (_AnonymisiertZumErfassungszeitpunk != value)
                {
                  OnAnonymisiertZumErfassungszeitpunkChanging(ref value);
                  ReportPropertyChanging("AnonymisiertZumErfassungszeitpunk");
                  _AnonymisiertZumErfassungszeitpunk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnonymisiertZumErfassungszeitpunk");
                  OnAnonymisiertZumErfassungszeitpunkChanged();
              }
            }
        }
        private bool _AnonymisiertZumErfassungszeitpunk;
        partial void OnGetAnonymisiertZumErfassungszeitpunk(ref bool value);
        partial void OnAnonymisiertZumErfassungszeitpunkChanging(ref bool value);
        partial void OnAnonymisiertZumErfassungszeitpunkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturFelder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrekturFelder")]
        public virtual EntityCollection<ManuelleKorrekturFeld> ManuelleKorrekturFelder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ManuelleKorrekturFeld>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrekturFelder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ManuelleKorrekturFeld>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrekturFelder", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturStatusHistories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrekturStatusHistories")]
        public virtual EntityCollection<ManuelleKorrekturStatusHistory> ManuelleKorrekturStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ManuelleKorrekturStatusHistory>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrekturStatusHistories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ManuelleKorrekturStatusHistory>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrekturStatusHistories", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.ManuelleKorrekturFeld in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ManuelleKorrekturFelderId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="ManuelleKorrekturFeld")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManuelleKorrekturFeld : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ManuelleKorrekturFeld object.
        /// </summary>
        /// <param name="manuelleKorrekturFelderId">Initial value of ManuelleKorrekturFelderId.</param>
        /// <param name="manuelleKorrekturId">Initial value of ManuelleKorrekturId.</param>
        /// <param name="feldname">Initial value of Feldname.</param>
        public static ManuelleKorrekturFeld CreateManuelleKorrekturFeld(int manuelleKorrekturFelderId, int manuelleKorrekturId, string feldname)
        {
            ManuelleKorrekturFeld manuelleKorrekturFeld = new ManuelleKorrekturFeld();
            manuelleKorrekturFeld.ManuelleKorrekturFelderId = manuelleKorrekturFelderId;
            manuelleKorrekturFeld.ManuelleKorrekturId = manuelleKorrekturId;
            manuelleKorrekturFeld.Feldname = feldname;
            return manuelleKorrekturFeld;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturFelderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int ManuelleKorrekturFelderId
        {
            get
            {
                int value = _ManuelleKorrekturFelderId;
                OnGetManuelleKorrekturFelderId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturFelderId != value)
                {
                  OnManuelleKorrekturFelderIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturFelderId");
                  _ManuelleKorrekturFelderId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturFelderId");
                  OnManuelleKorrekturFelderIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturFelderId;
        partial void OnGetManuelleKorrekturFelderId(ref int value);
        partial void OnManuelleKorrekturFelderIdChanging(ref int value);
        partial void OnManuelleKorrekturFelderIdChanged();
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int ManuelleKorrekturId
        {
            get
            {
                int value = _ManuelleKorrekturId;
                OnGetManuelleKorrekturId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturId != value)
                {
                  OnManuelleKorrekturIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturId");
                  _ManuelleKorrekturId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturId");
                  OnManuelleKorrekturIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturId;
        partial void OnGetManuelleKorrekturId(ref int value);
        partial void OnManuelleKorrekturIdChanging(ref int value);
        partial void OnManuelleKorrekturIdChanged();
    
        /// <summary>
        /// There are no comments for Feldname in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(200)]
        [Required()]
        public virtual string Feldname
        {
            get
            {
                string value = _Feldname;
                OnGetFeldname(ref value);
                return value;
            }
            set
            {
                if (_Feldname != value)
                {
                  OnFeldnameChanging(ref value);
                  ReportPropertyChanging("Feldname");
                  _Feldname = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Feldname");
                  OnFeldnameChanged();
              }
            }
        }
        private string _Feldname;
        partial void OnGetFeldname(ref string value);
        partial void OnFeldnameChanging(ref string value);
        partial void OnFeldnameChanged();
    
        /// <summary>
        /// There are no comments for Original in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Original
        {
            get
            {
                string value = _Original;
                OnGetOriginal(ref value);
                return value;
            }
            set
            {
                if (_Original != value)
                {
                  OnOriginalChanging(ref value);
                  ReportPropertyChanging("Original");
                  _Original = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Original");
                  OnOriginalChanged();
              }
            }
        }
        private string _Original;
        partial void OnGetOriginal(ref string value);
        partial void OnOriginalChanging(ref string value);
        partial void OnOriginalChanged();
    
        /// <summary>
        /// There are no comments for Automatisch in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Automatisch
        {
            get
            {
                string value = _Automatisch;
                OnGetAutomatisch(ref value);
                return value;
            }
            set
            {
                if (_Automatisch != value)
                {
                  OnAutomatischChanging(ref value);
                  ReportPropertyChanging("Automatisch");
                  _Automatisch = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Automatisch");
                  OnAutomatischChanged();
              }
            }
        }
        private string _Automatisch;
        partial void OnGetAutomatisch(ref string value);
        partial void OnAutomatischChanging(ref string value);
        partial void OnAutomatischChanged();
    
        /// <summary>
        /// There are no comments for Manuell in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Manuell
        {
            get
            {
                string value = _Manuell;
                OnGetManuell(ref value);
                return value;
            }
            set
            {
                if (_Manuell != value)
                {
                  OnManuellChanging(ref value);
                  ReportPropertyChanging("Manuell");
                  _Manuell = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Manuell");
                  OnManuellChanged();
              }
            }
        }
        private string _Manuell;
        partial void OnGetManuell(ref string value);
        partial void OnManuellChanging(ref string value);
        partial void OnManuellChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrektur in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur")]
        public virtual ManuelleKorrektur ManuelleKorrektur
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ManuelleKorrektur in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManuelleKorrektur> ManuelleKorrekturReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturFelder_ManuelleKorrektur", "ManuelleKorrektur").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.ManuelleKorrekturStatusHistory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ManuelleKorrekturStatusHistoryId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="ManuelleKorrekturStatusHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManuelleKorrekturStatusHistory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ManuelleKorrekturStatusHistory object.
        /// </summary>
        /// <param name="manuelleKorrekturStatusHistoryId">Initial value of ManuelleKorrekturStatusHistoryId.</param>
        /// <param name="manuelleKorrekturId">Initial value of ManuelleKorrekturId.</param>
        /// <param name="anonymisierungsstatus">Initial value of Anonymisierungsstatus.</param>
        /// <param name="erzeugtAm">Initial value of ErzeugtAm.</param>
        /// <param name="erzeugtVon">Initial value of ErzeugtVon.</param>
        public static ManuelleKorrekturStatusHistory CreateManuelleKorrekturStatusHistory(int manuelleKorrekturStatusHistoryId, int manuelleKorrekturId, int anonymisierungsstatus, global::System.DateTime erzeugtAm, string erzeugtVon)
        {
            ManuelleKorrekturStatusHistory manuelleKorrekturStatusHistory = new ManuelleKorrekturStatusHistory();
            manuelleKorrekturStatusHistory.ManuelleKorrekturStatusHistoryId = manuelleKorrekturStatusHistoryId;
            manuelleKorrekturStatusHistory.ManuelleKorrekturId = manuelleKorrekturId;
            manuelleKorrekturStatusHistory.Anonymisierungsstatus = anonymisierungsstatus;
            manuelleKorrekturStatusHistory.ErzeugtAm = erzeugtAm;
            manuelleKorrekturStatusHistory.ErzeugtVon = erzeugtVon;
            return manuelleKorrekturStatusHistory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturStatusHistoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int ManuelleKorrekturStatusHistoryId
        {
            get
            {
                int value = _ManuelleKorrekturStatusHistoryId;
                OnGetManuelleKorrekturStatusHistoryId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturStatusHistoryId != value)
                {
                  OnManuelleKorrekturStatusHistoryIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturStatusHistoryId");
                  _ManuelleKorrekturStatusHistoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturStatusHistoryId");
                  OnManuelleKorrekturStatusHistoryIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturStatusHistoryId;
        partial void OnGetManuelleKorrekturStatusHistoryId(ref int value);
        partial void OnManuelleKorrekturStatusHistoryIdChanging(ref int value);
        partial void OnManuelleKorrekturStatusHistoryIdChanged();
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int ManuelleKorrekturId
        {
            get
            {
                int value = _ManuelleKorrekturId;
                OnGetManuelleKorrekturId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturId != value)
                {
                  OnManuelleKorrekturIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturId");
                  _ManuelleKorrekturId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturId");
                  OnManuelleKorrekturIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturId;
        partial void OnGetManuelleKorrekturId(ref int value);
        partial void OnManuelleKorrekturIdChanging(ref int value);
        partial void OnManuelleKorrekturIdChanged();
    
        /// <summary>
        /// There are no comments for Anonymisierungsstatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual int Anonymisierungsstatus
        {
            get
            {
                int value = _Anonymisierungsstatus;
                OnGetAnonymisierungsstatus(ref value);
                return value;
            }
            set
            {
                if (_Anonymisierungsstatus != value)
                {
                  OnAnonymisierungsstatusChanging(ref value);
                  ReportPropertyChanging("Anonymisierungsstatus");
                  _Anonymisierungsstatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Anonymisierungsstatus");
                  OnAnonymisierungsstatusChanged();
              }
            }
        }
        private int _Anonymisierungsstatus;
        partial void OnGetAnonymisierungsstatus(ref int value);
        partial void OnAnonymisierungsstatusChanging(ref int value);
        partial void OnAnonymisierungsstatusChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtAm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Required()]
        public virtual global::System.DateTime ErzeugtAm
        {
            get
            {
                global::System.DateTime value = _ErzeugtAm;
                OnGetErzeugtAm(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtAm != value)
                {
                  OnErzeugtAmChanging(ref value);
                  ReportPropertyChanging("ErzeugtAm");
                  _ErzeugtAm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErzeugtAm");
                  OnErzeugtAmChanged();
              }
            }
        }
        private global::System.DateTime _ErzeugtAm;
        partial void OnGetErzeugtAm(ref global::System.DateTime value);
        partial void OnErzeugtAmChanging(ref global::System.DateTime value);
        partial void OnErzeugtAmChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtVon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [StringLength(200)]
        [Required()]
        public virtual string ErzeugtVon
        {
            get
            {
                string value = _ErzeugtVon;
                OnGetErzeugtVon(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtVon != value)
                {
                  OnErzeugtVonChanging(ref value);
                  ReportPropertyChanging("ErzeugtVon");
                  _ErzeugtVon = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ErzeugtVon");
                  OnErzeugtVonChanged();
              }
            }
        }
        private string _ErzeugtVon;
        partial void OnGetErzeugtVon(ref string value);
        partial void OnErzeugtVonChanging(ref string value);
        partial void OnErzeugtVonChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrektur in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMI.Access.Sql.Viaduc.EF", "FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur")]
        public virtual ManuelleKorrektur ManuelleKorrektur
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ManuelleKorrektur in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManuelleKorrektur> ManuelleKorrekturReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ManuelleKorrektur>("CMI.Access.Sql.Viaduc.EF.FK_ManuelleKorrekturStatusHistory_ManuelleKorrektur1", "ManuelleKorrektur").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for CMI.Access.Sql.Viaduc.EF.VManuelleKorrektur in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ManuelleKorrekturId
    /// VeId
    /// Signatur
    /// Schutzfristende
    /// Titel
    /// ErzeugtAm
    /// ErzeugtVon
    /// Anonymisierungsstatus
    /// Hierachiestufe
    /// Aktenzeichen
    /// ZugänglichkeitGemässBGA
    /// AnonymisiertZumErfassungszeitpunk
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CMI.Access.Sql.Viaduc.EF", Name="VManuelleKorrektur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VManuelleKorrektur : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VManuelleKorrektur object.
        /// </summary>
        /// <param name="manuelleKorrekturId">Initial value of ManuelleKorrekturId.</param>
        /// <param name="veId">Initial value of VeId.</param>
        /// <param name="signatur">Initial value of Signatur.</param>
        /// <param name="schutzfristende">Initial value of Schutzfristende.</param>
        /// <param name="titel">Initial value of Titel.</param>
        /// <param name="erzeugtAm">Initial value of ErzeugtAm.</param>
        /// <param name="erzeugtVon">Initial value of ErzeugtVon.</param>
        /// <param name="anonymisierungsstatus">Initial value of Anonymisierungsstatus.</param>
        /// <param name="hierachiestufe">Initial value of Hierachiestufe.</param>
        /// <param name="aktenzeichen">Initial value of Aktenzeichen.</param>
        /// <param name="zugänglichkeitGemässBGA">Initial value of ZugänglichkeitGemässBGA.</param>
        /// <param name="anonymisiertZumErfassungszeitpunk">Initial value of AnonymisiertZumErfassungszeitpunk.</param>
        public static VManuelleKorrektur CreateVManuelleKorrektur(int manuelleKorrekturId, int veId, string signatur, global::System.DateTime schutzfristende, string titel, global::System.DateTime erzeugtAm, string erzeugtVon, int anonymisierungsstatus, string hierachiestufe, string aktenzeichen, string zugänglichkeitGemässBGA, bool anonymisiertZumErfassungszeitpunk)
        {
            VManuelleKorrektur vManuelleKorrektur = new VManuelleKorrektur();
            vManuelleKorrektur.ManuelleKorrekturId = manuelleKorrekturId;
            vManuelleKorrektur.VeId = veId;
            vManuelleKorrektur.Signatur = signatur;
            vManuelleKorrektur.Schutzfristende = schutzfristende;
            vManuelleKorrektur.Titel = titel;
            vManuelleKorrektur.ErzeugtAm = erzeugtAm;
            vManuelleKorrektur.ErzeugtVon = erzeugtVon;
            vManuelleKorrektur.Anonymisierungsstatus = anonymisierungsstatus;
            vManuelleKorrektur.Hierachiestufe = hierachiestufe;
            vManuelleKorrektur.Aktenzeichen = aktenzeichen;
            vManuelleKorrektur.ZugänglichkeitGemässBGA = zugänglichkeitGemässBGA;
            vManuelleKorrektur.AnonymisiertZumErfassungszeitpunk = anonymisiertZumErfassungszeitpunk;
            return vManuelleKorrektur;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ManuelleKorrekturId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int ManuelleKorrekturId
        {
            get
            {
                int value = _ManuelleKorrekturId;
                OnGetManuelleKorrekturId(ref value);
                return value;
            }
            set
            {
                if (_ManuelleKorrekturId != value)
                {
                  OnManuelleKorrekturIdChanging(ref value);
                  ReportPropertyChanging("ManuelleKorrekturId");
                  _ManuelleKorrekturId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManuelleKorrekturId");
                  OnManuelleKorrekturIdChanged();
              }
            }
        }
        private int _ManuelleKorrekturId;
        partial void OnGetManuelleKorrekturId(ref int value);
        partial void OnManuelleKorrekturIdChanging(ref int value);
        partial void OnManuelleKorrekturIdChanged();
    
        /// <summary>
        /// There are no comments for VeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int VeId
        {
            get
            {
                int value = _VeId;
                OnGetVeId(ref value);
                return value;
            }
            set
            {
                if (_VeId != value)
                {
                  OnVeIdChanging(ref value);
                  ReportPropertyChanging("VeId");
                  _VeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VeId");
                  OnVeIdChanged();
              }
            }
        }
        private int _VeId;
        partial void OnGetVeId(ref int value);
        partial void OnVeIdChanging(ref int value);
        partial void OnVeIdChanged();
    
        /// <summary>
        /// There are no comments for Signatur in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual string Signatur
        {
            get
            {
                string value = _Signatur;
                OnGetSignatur(ref value);
                return value;
            }
            set
            {
                if (_Signatur != value)
                {
                  OnSignaturChanging(ref value);
                  ReportPropertyChanging("Signatur");
                  _Signatur = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Signatur");
                  OnSignaturChanged();
              }
            }
        }
        private string _Signatur;
        partial void OnGetSignatur(ref string value);
        partial void OnSignaturChanging(ref string value);
        partial void OnSignaturChanged();
    
        /// <summary>
        /// There are no comments for Schutzfristende in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual global::System.DateTime Schutzfristende
        {
            get
            {
                global::System.DateTime value = _Schutzfristende;
                OnGetSchutzfristende(ref value);
                return value;
            }
            set
            {
                if (_Schutzfristende != value)
                {
                  OnSchutzfristendeChanging(ref value);
                  ReportPropertyChanging("Schutzfristende");
                  _Schutzfristende = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Schutzfristende");
                  OnSchutzfristendeChanged();
              }
            }
        }
        private global::System.DateTime _Schutzfristende;
        partial void OnGetSchutzfristende(ref global::System.DateTime value);
        partial void OnSchutzfristendeChanging(ref global::System.DateTime value);
        partial void OnSchutzfristendeChanged();
    
        /// <summary>
        /// There are no comments for Titel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual string Titel
        {
            get
            {
                string value = _Titel;
                OnGetTitel(ref value);
                return value;
            }
            set
            {
                if (_Titel != value)
                {
                  OnTitelChanging(ref value);
                  ReportPropertyChanging("Titel");
                  _Titel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Titel");
                  OnTitelChanged();
              }
            }
        }
        private string _Titel;
        partial void OnGetTitel(ref string value);
        partial void OnTitelChanging(ref string value);
        partial void OnTitelChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtAm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual global::System.DateTime ErzeugtAm
        {
            get
            {
                global::System.DateTime value = _ErzeugtAm;
                OnGetErzeugtAm(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtAm != value)
                {
                  OnErzeugtAmChanging(ref value);
                  ReportPropertyChanging("ErzeugtAm");
                  _ErzeugtAm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErzeugtAm");
                  OnErzeugtAmChanged();
              }
            }
        }
        private global::System.DateTime _ErzeugtAm;
        partial void OnGetErzeugtAm(ref global::System.DateTime value);
        partial void OnErzeugtAmChanging(ref global::System.DateTime value);
        partial void OnErzeugtAmChanged();
    
        /// <summary>
        /// There are no comments for ErzeugtVon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [StringLength(200)]
        [Required()]
        public virtual string ErzeugtVon
        {
            get
            {
                string value = _ErzeugtVon;
                OnGetErzeugtVon(ref value);
                return value;
            }
            set
            {
                if (_ErzeugtVon != value)
                {
                  OnErzeugtVonChanging(ref value);
                  ReportPropertyChanging("ErzeugtVon");
                  _ErzeugtVon = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ErzeugtVon");
                  OnErzeugtVonChanged();
              }
            }
        }
        private string _ErzeugtVon;
        partial void OnGetErzeugtVon(ref string value);
        partial void OnErzeugtVonChanging(ref string value);
        partial void OnErzeugtVonChanged();
    
        /// <summary>
        /// There are no comments for GeändertAm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? GeändertAm
        {
            get
            {
                global::System.DateTime? value = _GeändertAm;
                OnGetGeändertAm(ref value);
                return value;
            }
            set
            {
                if (_GeändertAm != value)
                {
                  OnGeändertAmChanging(ref value);
                  ReportPropertyChanging("GeändertAm");
                  _GeändertAm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GeändertAm");
                  OnGeändertAmChanged();
              }
            }
        }
        private global::System.DateTime? _GeändertAm;
        partial void OnGetGeändertAm(ref global::System.DateTime? value);
        partial void OnGeändertAmChanging(ref global::System.DateTime? value);
        partial void OnGeändertAmChanged();
    
        /// <summary>
        /// There are no comments for GeändertVon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string GeändertVon
        {
            get
            {
                string value = _GeändertVon;
                OnGetGeändertVon(ref value);
                return value;
            }
            set
            {
                if (_GeändertVon != value)
                {
                  OnGeändertVonChanging(ref value);
                  ReportPropertyChanging("GeändertVon");
                  _GeändertVon = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("GeändertVon");
                  OnGeändertVonChanged();
              }
            }
        }
        private string _GeändertVon;
        partial void OnGetGeändertVon(ref string value);
        partial void OnGeändertVonChanging(ref string value);
        partial void OnGeändertVonChanged();
    
        /// <summary>
        /// There are no comments for Anonymisierungsstatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual int Anonymisierungsstatus
        {
            get
            {
                int value = _Anonymisierungsstatus;
                OnGetAnonymisierungsstatus(ref value);
                return value;
            }
            set
            {
                if (_Anonymisierungsstatus != value)
                {
                  OnAnonymisierungsstatusChanging(ref value);
                  ReportPropertyChanging("Anonymisierungsstatus");
                  _Anonymisierungsstatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Anonymisierungsstatus");
                  OnAnonymisierungsstatusChanged();
              }
            }
        }
        private int _Anonymisierungsstatus;
        partial void OnGetAnonymisierungsstatus(ref int value);
        partial void OnAnonymisierungsstatusChanging(ref int value);
        partial void OnAnonymisierungsstatusChanged();
    
        /// <summary>
        /// There are no comments for Kommentar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Kommentar
        {
            get
            {
                string value = _Kommentar;
                OnGetKommentar(ref value);
                return value;
            }
            set
            {
                if (_Kommentar != value)
                {
                  OnKommentarChanging(ref value);
                  ReportPropertyChanging("Kommentar");
                  _Kommentar = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Kommentar");
                  OnKommentarChanged();
              }
            }
        }
        private string _Kommentar;
        partial void OnGetKommentar(ref string value);
        partial void OnKommentarChanging(ref string value);
        partial void OnKommentarChanged();
    
        /// <summary>
        /// There are no comments for Hierachiestufe in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [StringLength(100)]
        [Required()]
        public virtual string Hierachiestufe
        {
            get
            {
                string value = _Hierachiestufe;
                OnGetHierachiestufe(ref value);
                return value;
            }
            set
            {
                if (_Hierachiestufe != value)
                {
                  OnHierachiestufeChanging(ref value);
                  ReportPropertyChanging("Hierachiestufe");
                  _Hierachiestufe = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Hierachiestufe");
                  OnHierachiestufeChanged();
              }
            }
        }
        private string _Hierachiestufe;
        partial void OnGetHierachiestufe(ref string value);
        partial void OnHierachiestufeChanging(ref string value);
        partial void OnHierachiestufeChanged();
    
        /// <summary>
        /// There are no comments for Aktenzeichen in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [StringLength(200)]
        [Required()]
        public virtual string Aktenzeichen
        {
            get
            {
                string value = _Aktenzeichen;
                OnGetAktenzeichen(ref value);
                return value;
            }
            set
            {
                if (_Aktenzeichen != value)
                {
                  OnAktenzeichenChanging(ref value);
                  ReportPropertyChanging("Aktenzeichen");
                  _Aktenzeichen = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Aktenzeichen");
                  OnAktenzeichenChanged();
              }
            }
        }
        private string _Aktenzeichen;
        partial void OnGetAktenzeichen(ref string value);
        partial void OnAktenzeichenChanging(ref string value);
        partial void OnAktenzeichenChanged();
    
        /// <summary>
        /// There are no comments for Entstehungszeitraum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(100)]
        public virtual string Entstehungszeitraum
        {
            get
            {
                string value = _Entstehungszeitraum;
                OnGetEntstehungszeitraum(ref value);
                return value;
            }
            set
            {
                if (_Entstehungszeitraum != value)
                {
                  OnEntstehungszeitraumChanging(ref value);
                  ReportPropertyChanging("Entstehungszeitraum");
                  _Entstehungszeitraum = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Entstehungszeitraum");
                  OnEntstehungszeitraumChanged();
              }
            }
        }
        private string _Entstehungszeitraum;
        partial void OnGetEntstehungszeitraum(ref string value);
        partial void OnEntstehungszeitraumChanging(ref string value);
        partial void OnEntstehungszeitraumChanged();
    
        /// <summary>
        /// There are no comments for ZugänglichkeitGemässBGA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [StringLength(100)]
        [Required()]
        public virtual string ZugänglichkeitGemässBGA
        {
            get
            {
                string value = _ZugänglichkeitGemässBGA;
                OnGetZugänglichkeitGemässBGA(ref value);
                return value;
            }
            set
            {
                if (_ZugänglichkeitGemässBGA != value)
                {
                  OnZugänglichkeitGemässBGAChanging(ref value);
                  ReportPropertyChanging("ZugänglichkeitGemässBGA");
                  _ZugänglichkeitGemässBGA = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ZugänglichkeitGemässBGA");
                  OnZugänglichkeitGemässBGAChanged();
              }
            }
        }
        private string _ZugänglichkeitGemässBGA;
        partial void OnGetZugänglichkeitGemässBGA(ref string value);
        partial void OnZugänglichkeitGemässBGAChanging(ref string value);
        partial void OnZugänglichkeitGemässBGAChanged();
    
        /// <summary>
        /// There are no comments for Schutzfristverzeichnung in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Schutzfristverzeichnung
        {
            get
            {
                string value = _Schutzfristverzeichnung;
                OnGetSchutzfristverzeichnung(ref value);
                return value;
            }
            set
            {
                if (_Schutzfristverzeichnung != value)
                {
                  OnSchutzfristverzeichnungChanging(ref value);
                  ReportPropertyChanging("Schutzfristverzeichnung");
                  _Schutzfristverzeichnung = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Schutzfristverzeichnung");
                  OnSchutzfristverzeichnungChanged();
              }
            }
        }
        private string _Schutzfristverzeichnung;
        partial void OnGetSchutzfristverzeichnung(ref string value);
        partial void OnSchutzfristverzeichnungChanging(ref string value);
        partial void OnSchutzfristverzeichnungChanged();
    
        /// <summary>
        /// There are no comments for ZuständigeStelle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(100)]
        public virtual string ZuständigeStelle
        {
            get
            {
                string value = _ZuständigeStelle;
                OnGetZuständigeStelle(ref value);
                return value;
            }
            set
            {
                if (_ZuständigeStelle != value)
                {
                  OnZuständigeStelleChanging(ref value);
                  ReportPropertyChanging("ZuständigeStelle");
                  _ZuständigeStelle = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZuständigeStelle");
                  OnZuständigeStelleChanged();
              }
            }
        }
        private string _ZuständigeStelle;
        partial void OnGetZuständigeStelle(ref string value);
        partial void OnZuständigeStelleChanging(ref string value);
        partial void OnZuständigeStelleChanged();
    
        /// <summary>
        /// There are no comments for Publikationsrechte in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [StringLength(200)]
        public virtual string Publikationsrechte
        {
            get
            {
                string value = _Publikationsrechte;
                OnGetPublikationsrechte(ref value);
                return value;
            }
            set
            {
                if (_Publikationsrechte != value)
                {
                  OnPublikationsrechteChanging(ref value);
                  ReportPropertyChanging("Publikationsrechte");
                  _Publikationsrechte = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Publikationsrechte");
                  OnPublikationsrechteChanged();
              }
            }
        }
        private string _Publikationsrechte;
        partial void OnGetPublikationsrechte(ref string value);
        partial void OnPublikationsrechteChanging(ref string value);
        partial void OnPublikationsrechteChanged();
    
        /// <summary>
        /// There are no comments for AnonymisiertZumErfassungszeitpunk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Key]
        [Required()]
        public virtual bool AnonymisiertZumErfassungszeitpunk
        {
            get
            {
                bool value = _AnonymisiertZumErfassungszeitpunk;
                OnGetAnonymisiertZumErfassungszeitpunk(ref value);
                return value;
            }
            set
            {
                if (_AnonymisiertZumErfassungszeitpunk != value)
                {
                  OnAnonymisiertZumErfassungszeitpunkChanging(ref value);
                  ReportPropertyChanging("AnonymisiertZumErfassungszeitpunk");
                  _AnonymisiertZumErfassungszeitpunk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnonymisiertZumErfassungszeitpunk");
                  OnAnonymisiertZumErfassungszeitpunkChanged();
              }
            }
        }
        private bool _AnonymisiertZumErfassungszeitpunk;
        partial void OnGetAnonymisiertZumErfassungszeitpunk(ref bool value);
        partial void OnAnonymisiertZumErfassungszeitpunkChanging(ref bool value);
        partial void OnAnonymisiertZumErfassungszeitpunkChanged();
    
        /// <summary>
        /// There are no comments for TitelGemAIS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TitelGemAIS
        {
            get
            {
                string value = _TitelGemAIS;
                OnGetTitelGemAIS(ref value);
                return value;
            }
            set
            {
                if (_TitelGemAIS != value)
                {
                  OnTitelGemAISChanging(ref value);
                  ReportPropertyChanging("TitelGemAIS");
                  _TitelGemAIS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TitelGemAIS");
                  OnTitelGemAISChanged();
              }
            }
        }
        private string _TitelGemAIS;
        partial void OnGetTitelGemAIS(ref string value);
        partial void OnTitelGemAISChanging(ref string value);
        partial void OnTitelGemAISChanged();
    
        /// <summary>
        /// There are no comments for TitelAutomatischAnonymisiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TitelAutomatischAnonymisiert
        {
            get
            {
                string value = _TitelAutomatischAnonymisiert;
                OnGetTitelAutomatischAnonymisiert(ref value);
                return value;
            }
            set
            {
                if (_TitelAutomatischAnonymisiert != value)
                {
                  OnTitelAutomatischAnonymisiertChanging(ref value);
                  ReportPropertyChanging("TitelAutomatischAnonymisiert");
                  _TitelAutomatischAnonymisiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TitelAutomatischAnonymisiert");
                  OnTitelAutomatischAnonymisiertChanged();
              }
            }
        }
        private string _TitelAutomatischAnonymisiert;
        partial void OnGetTitelAutomatischAnonymisiert(ref string value);
        partial void OnTitelAutomatischAnonymisiertChanging(ref string value);
        partial void OnTitelAutomatischAnonymisiertChanged();
    
        /// <summary>
        /// There are no comments for TitelManuellKorrigiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TitelManuellKorrigiert
        {
            get
            {
                string value = _TitelManuellKorrigiert;
                OnGetTitelManuellKorrigiert(ref value);
                return value;
            }
            set
            {
                if (_TitelManuellKorrigiert != value)
                {
                  OnTitelManuellKorrigiertChanging(ref value);
                  ReportPropertyChanging("TitelManuellKorrigiert");
                  _TitelManuellKorrigiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TitelManuellKorrigiert");
                  OnTitelManuellKorrigiertChanged();
              }
            }
        }
        private string _TitelManuellKorrigiert;
        partial void OnGetTitelManuellKorrigiert(ref string value);
        partial void OnTitelManuellKorrigiertChanging(ref string value);
        partial void OnTitelManuellKorrigiertChanged();
    
        /// <summary>
        /// There are no comments for DarinGemAIS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DarinGemAIS
        {
            get
            {
                string value = _DarinGemAIS;
                OnGetDarinGemAIS(ref value);
                return value;
            }
            set
            {
                if (_DarinGemAIS != value)
                {
                  OnDarinGemAISChanging(ref value);
                  ReportPropertyChanging("DarinGemAIS");
                  _DarinGemAIS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DarinGemAIS");
                  OnDarinGemAISChanged();
              }
            }
        }
        private string _DarinGemAIS;
        partial void OnGetDarinGemAIS(ref string value);
        partial void OnDarinGemAISChanging(ref string value);
        partial void OnDarinGemAISChanged();
    
        /// <summary>
        /// There are no comments for DarinAutomatischAnonymisiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DarinAutomatischAnonymisiert
        {
            get
            {
                string value = _DarinAutomatischAnonymisiert;
                OnGetDarinAutomatischAnonymisiert(ref value);
                return value;
            }
            set
            {
                if (_DarinAutomatischAnonymisiert != value)
                {
                  OnDarinAutomatischAnonymisiertChanging(ref value);
                  ReportPropertyChanging("DarinAutomatischAnonymisiert");
                  _DarinAutomatischAnonymisiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DarinAutomatischAnonymisiert");
                  OnDarinAutomatischAnonymisiertChanged();
              }
            }
        }
        private string _DarinAutomatischAnonymisiert;
        partial void OnGetDarinAutomatischAnonymisiert(ref string value);
        partial void OnDarinAutomatischAnonymisiertChanging(ref string value);
        partial void OnDarinAutomatischAnonymisiertChanged();
    
        /// <summary>
        /// There are no comments for DarinManuellKorrigiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DarinManuellKorrigiert
        {
            get
            {
                string value = _DarinManuellKorrigiert;
                OnGetDarinManuellKorrigiert(ref value);
                return value;
            }
            set
            {
                if (_DarinManuellKorrigiert != value)
                {
                  OnDarinManuellKorrigiertChanging(ref value);
                  ReportPropertyChanging("DarinManuellKorrigiert");
                  _DarinManuellKorrigiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DarinManuellKorrigiert");
                  OnDarinManuellKorrigiertChanged();
              }
            }
        }
        private string _DarinManuellKorrigiert;
        partial void OnGetDarinManuellKorrigiert(ref string value);
        partial void OnDarinManuellKorrigiertChanging(ref string value);
        partial void OnDarinManuellKorrigiertChanged();
    
        /// <summary>
        /// There are no comments for ZusatzkomponenteGemAIS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusatzkomponenteGemAIS
        {
            get
            {
                string value = _ZusatzkomponenteGemAIS;
                OnGetZusatzkomponenteGemAIS(ref value);
                return value;
            }
            set
            {
                if (_ZusatzkomponenteGemAIS != value)
                {
                  OnZusatzkomponenteGemAISChanging(ref value);
                  ReportPropertyChanging("ZusatzkomponenteGemAIS");
                  _ZusatzkomponenteGemAIS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusatzkomponenteGemAIS");
                  OnZusatzkomponenteGemAISChanged();
              }
            }
        }
        private string _ZusatzkomponenteGemAIS;
        partial void OnGetZusatzkomponenteGemAIS(ref string value);
        partial void OnZusatzkomponenteGemAISChanging(ref string value);
        partial void OnZusatzkomponenteGemAISChanged();
    
        /// <summary>
        /// There are no comments for ZusatzkomponenteAutomatischAnonymisiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusatzkomponenteAutomatischAnonymisiert
        {
            get
            {
                string value = _ZusatzkomponenteAutomatischAnonymisiert;
                OnGetZusatzkomponenteAutomatischAnonymisiert(ref value);
                return value;
            }
            set
            {
                if (_ZusatzkomponenteAutomatischAnonymisiert != value)
                {
                  OnZusatzkomponenteAutomatischAnonymisiertChanging(ref value);
                  ReportPropertyChanging("ZusatzkomponenteAutomatischAnonymisiert");
                  _ZusatzkomponenteAutomatischAnonymisiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusatzkomponenteAutomatischAnonymisiert");
                  OnZusatzkomponenteAutomatischAnonymisiertChanged();
              }
            }
        }
        private string _ZusatzkomponenteAutomatischAnonymisiert;
        partial void OnGetZusatzkomponenteAutomatischAnonymisiert(ref string value);
        partial void OnZusatzkomponenteAutomatischAnonymisiertChanging(ref string value);
        partial void OnZusatzkomponenteAutomatischAnonymisiertChanged();
    
        /// <summary>
        /// There are no comments for ZusatzkomponenteManuellKorrigiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusatzkomponenteManuellKorrigiert
        {
            get
            {
                string value = _ZusatzkomponenteManuellKorrigiert;
                OnGetZusatzkomponenteManuellKorrigiert(ref value);
                return value;
            }
            set
            {
                if (_ZusatzkomponenteManuellKorrigiert != value)
                {
                  OnZusatzkomponenteManuellKorrigiertChanging(ref value);
                  ReportPropertyChanging("ZusatzkomponenteManuellKorrigiert");
                  _ZusatzkomponenteManuellKorrigiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusatzkomponenteManuellKorrigiert");
                  OnZusatzkomponenteManuellKorrigiertChanged();
              }
            }
        }
        private string _ZusatzkomponenteManuellKorrigiert;
        partial void OnGetZusatzkomponenteManuellKorrigiert(ref string value);
        partial void OnZusatzkomponenteManuellKorrigiertChanging(ref string value);
        partial void OnZusatzkomponenteManuellKorrigiertChanged();
    
        /// <summary>
        /// There are no comments for ZusaetzlicheInformationenGemAIS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusaetzlicheInformationenGemAIS
        {
            get
            {
                string value = _ZusaetzlicheInformationenGemAIS;
                OnGetZusaetzlicheInformationenGemAIS(ref value);
                return value;
            }
            set
            {
                if (_ZusaetzlicheInformationenGemAIS != value)
                {
                  OnZusaetzlicheInformationenGemAISChanging(ref value);
                  ReportPropertyChanging("ZusaetzlicheInformationenGemAIS");
                  _ZusaetzlicheInformationenGemAIS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusaetzlicheInformationenGemAIS");
                  OnZusaetzlicheInformationenGemAISChanged();
              }
            }
        }
        private string _ZusaetzlicheInformationenGemAIS;
        partial void OnGetZusaetzlicheInformationenGemAIS(ref string value);
        partial void OnZusaetzlicheInformationenGemAISChanging(ref string value);
        partial void OnZusaetzlicheInformationenGemAISChanged();
    
        /// <summary>
        /// There are no comments for ZusaetzlicheInformationenAutomatischAnonymisiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusaetzlicheInformationenAutomatischAnonymisiert
        {
            get
            {
                string value = _ZusaetzlicheInformationenAutomatischAnonymisiert;
                OnGetZusaetzlicheInformationenAutomatischAnonymisiert(ref value);
                return value;
            }
            set
            {
                if (_ZusaetzlicheInformationenAutomatischAnonymisiert != value)
                {
                  OnZusaetzlicheInformationenAutomatischAnonymisiertChanging(ref value);
                  ReportPropertyChanging("ZusaetzlicheInformationenAutomatischAnonymisiert");
                  _ZusaetzlicheInformationenAutomatischAnonymisiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusaetzlicheInformationenAutomatischAnonymisiert");
                  OnZusaetzlicheInformationenAutomatischAnonymisiertChanged();
              }
            }
        }
        private string _ZusaetzlicheInformationenAutomatischAnonymisiert;
        partial void OnGetZusaetzlicheInformationenAutomatischAnonymisiert(ref string value);
        partial void OnZusaetzlicheInformationenAutomatischAnonymisiertChanging(ref string value);
        partial void OnZusaetzlicheInformationenAutomatischAnonymisiertChanged();
    
        /// <summary>
        /// There are no comments for ZusaetzlicheInformationenManuellKorrigiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZusaetzlicheInformationenManuellKorrigiert
        {
            get
            {
                string value = _ZusaetzlicheInformationenManuellKorrigiert;
                OnGetZusaetzlicheInformationenManuellKorrigiert(ref value);
                return value;
            }
            set
            {
                if (_ZusaetzlicheInformationenManuellKorrigiert != value)
                {
                  OnZusaetzlicheInformationenManuellKorrigiertChanging(ref value);
                  ReportPropertyChanging("ZusaetzlicheInformationenManuellKorrigiert");
                  _ZusaetzlicheInformationenManuellKorrigiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZusaetzlicheInformationenManuellKorrigiert");
                  OnZusaetzlicheInformationenManuellKorrigiertChanged();
              }
            }
        }
        private string _ZusaetzlicheInformationenManuellKorrigiert;
        partial void OnGetZusaetzlicheInformationenManuellKorrigiert(ref string value);
        partial void OnZusaetzlicheInformationenManuellKorrigiertChanging(ref string value);
        partial void OnZusaetzlicheInformationenManuellKorrigiertChanged();
    
        /// <summary>
        /// There are no comments for VerwandteVEGemAIS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VerwandteVEGemAIS
        {
            get
            {
                string value = _VerwandteVEGemAIS;
                OnGetVerwandteVEGemAIS(ref value);
                return value;
            }
            set
            {
                if (_VerwandteVEGemAIS != value)
                {
                  OnVerwandteVEGemAISChanging(ref value);
                  ReportPropertyChanging("VerwandteVEGemAIS");
                  _VerwandteVEGemAIS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VerwandteVEGemAIS");
                  OnVerwandteVEGemAISChanged();
              }
            }
        }
        private string _VerwandteVEGemAIS;
        partial void OnGetVerwandteVEGemAIS(ref string value);
        partial void OnVerwandteVEGemAISChanging(ref string value);
        partial void OnVerwandteVEGemAISChanged();
    
        /// <summary>
        /// There are no comments for VerwandteVEAutomatischAnonymisiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VerwandteVEAutomatischAnonymisiert
        {
            get
            {
                string value = _VerwandteVEAutomatischAnonymisiert;
                OnGetVerwandteVEAutomatischAnonymisiert(ref value);
                return value;
            }
            set
            {
                if (_VerwandteVEAutomatischAnonymisiert != value)
                {
                  OnVerwandteVEAutomatischAnonymisiertChanging(ref value);
                  ReportPropertyChanging("VerwandteVEAutomatischAnonymisiert");
                  _VerwandteVEAutomatischAnonymisiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VerwandteVEAutomatischAnonymisiert");
                  OnVerwandteVEAutomatischAnonymisiertChanged();
              }
            }
        }
        private string _VerwandteVEAutomatischAnonymisiert;
        partial void OnGetVerwandteVEAutomatischAnonymisiert(ref string value);
        partial void OnVerwandteVEAutomatischAnonymisiertChanging(ref string value);
        partial void OnVerwandteVEAutomatischAnonymisiertChanged();
    
        /// <summary>
        /// There are no comments for VerwandteVEManuellKorrigiert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VerwandteVEManuellKorrigiert
        {
            get
            {
                string value = _VerwandteVEManuellKorrigiert;
                OnGetVerwandteVEManuellKorrigiert(ref value);
                return value;
            }
            set
            {
                if (_VerwandteVEManuellKorrigiert != value)
                {
                  OnVerwandteVEManuellKorrigiertChanging(ref value);
                  ReportPropertyChanging("VerwandteVEManuellKorrigiert");
                  _VerwandteVEManuellKorrigiert = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VerwandteVEManuellKorrigiert");
                  OnVerwandteVEManuellKorrigiertChanged();
              }
            }
        }
        private string _VerwandteVEManuellKorrigiert;
        partial void OnGetVerwandteVEManuellKorrigiert(ref string value);
        partial void OnVerwandteVEManuellKorrigiertChanging(ref string value);
        partial void OnVerwandteVEManuellKorrigiertChanged();

        #endregion
    }

}
